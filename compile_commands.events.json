{"rid":"11232297332477247038","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//backends/ErrorTracking/Backend.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//backends/ErrorTracking/Backend.o","backends/ErrorTracking/Backend.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"LOGNAME":"kento","ZSH":"/Users/kento/.oh-my-zsh","_":"/opt/homebrew/bin/bear","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","HOMEBREW_PREFIX":"/opt/homebrew","ZDOTDIR":"/Users/kento","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","MAKE_TERMOUT":"/dev/ttys002","MAKEFLAGS":"w -j","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","TERM_PROGRAM_VERSION":"1.73.1","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","__CFBundleIdentifier":"com.microsoft.VSCode","OLDPWD":"/Users/kento/Develop/quisps","XPC_FLAGS":"0x0","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","TERM":"xterm-256color","_CE_CONDA":"","LESS":"-R","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","MAKE_TERMERR":"/dev/ttys002","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","PYTHONNOUSERSITE":"1","CONDA_SHLVL":"0","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","QT_SELECT":"5","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","PAGER":"less","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","COMMAND_MODE":"unix2003","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","HOME":"/Users/kento","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","PWD":"/Users/kento/Develop/quisps/quisp2","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","USER":"kento","HOST":"MacbookSoon.local","SHELL":"/bin/zsh","XPC_SERVICE_NAME":"0","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","OMNETPP_RELEASE":"//omnetpp-6.0.1","LSCOLORS":"Gxfxcxdxbxegedabagacad","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HOMEBREW_REPOSITORY":"/opt/homebrew","MAKELEVEL":"2","MFLAGS":"-w -j","USER_ZDOTDIR":"/Users/kento","_CE_M":"","LANG":"en_GB.UTF-8","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","TERM_PROGRAM":"vscode","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","MallocNanoZone":"0","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","VSCODE_INJECTION":"1","COLORTERM":"truecolor","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","dir":"","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","SHLVL":"3"}},"pid":57022,"ppid":56966},"timestamp":"2022-11-11T12:58:02.781052Z"}
{"rid":"12682628218604485730","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//backends/ErrorTracking/Qubit.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//backends/ErrorTracking/Qubit.o","backends/ErrorTracking/Qubit.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"OLDPWD":"/Users/kento/Develop/quisps","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","CONDA_SHLVL":"0","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","HOMEBREW_PREFIX":"/opt/homebrew","QT_SELECT":"5","ZSH":"/Users/kento/.oh-my-zsh","USER_ZDOTDIR":"/Users/kento","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","HOME":"/Users/kento","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","_":"/opt/homebrew/bin/bear","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","MAKE_TERMOUT":"/dev/ttys002","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","MAKEFLAGS":"w -j","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","XPC_SERVICE_NAME":"0","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","PYTHONNOUSERSITE":"1","__CFBundleIdentifier":"com.microsoft.VSCode","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","HOST":"MacbookSoon.local","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","MallocNanoZone":"0","COMMAND_MODE":"unix2003","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","TERM":"xterm-256color","SHELL":"/bin/zsh","dir":"","PAGER":"less","OMNETPP_RELEASE":"//omnetpp-6.0.1","TERM_PROGRAM":"vscode","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","COLORTERM":"truecolor","USER":"kento","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","ZDOTDIR":"/Users/kento","LESS":"-R","LSCOLORS":"Gxfxcxdxbxegedabagacad","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","TERM_PROGRAM_VERSION":"1.73.1","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","XPC_FLAGS":"0x0","PWD":"/Users/kento/Develop/quisps/quisp2","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","LANG":"en_GB.UTF-8","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","HOMEBREW_REPOSITORY":"/opt/homebrew","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","MAKELEVEL":"2","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","LOGNAME":"kento","_CE_CONDA":"","_CE_M":"","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","VSCODE_INJECTION":"1","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","MFLAGS":"-w -j","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","MAKE_TERMERR":"/dev/ttys002","SHLVL":"3"}},"pid":57031,"ppid":56966},"timestamp":"2022-11-11T12:58:02.857695Z"}
{"rid":"17387639833148150975","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//channels/QuantumChannel.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//channels/QuantumChannel.o","channels/QuantumChannel.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"PAGER":"less","QT_SELECT":"5","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","PWD":"/Users/kento/Develop/quisps/quisp2","MAKELEVEL":"2","_CE_CONDA":"","LOGNAME":"kento","TERM_PROGRAM":"vscode","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","VSCODE_INJECTION":"1","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","MallocNanoZone":"0","MAKE_TERMERR":"/dev/ttys002","MFLAGS":"-w -j","_":"/opt/homebrew/bin/bear","CONDA_SHLVL":"0","TERM":"xterm-256color","COLORTERM":"truecolor","SHELL":"/bin/zsh","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","HOST":"MacbookSoon.local","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","XPC_SERVICE_NAME":"0","_CE_M":"","COMMAND_MODE":"unix2003","HOME":"/Users/kento","__CFBundleIdentifier":"com.microsoft.VSCode","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","HOMEBREW_REPOSITORY":"/opt/homebrew","ZSH":"/Users/kento/.oh-my-zsh","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","USER":"kento","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","OLDPWD":"/Users/kento/Develop/quisps","dir":"","HOMEBREW_PREFIX":"/opt/homebrew","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","LSCOLORS":"Gxfxcxdxbxegedabagacad","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","USER_ZDOTDIR":"/Users/kento","ZDOTDIR":"/Users/kento","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","XPC_FLAGS":"0x0","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","MAKE_TERMOUT":"/dev/ttys002","OMNETPP_RELEASE":"//omnetpp-6.0.1","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","LESS":"-R","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","TERM_PROGRAM_VERSION":"1.73.1","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","MAKEFLAGS":"w -j","LANG":"en_GB.UTF-8","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","PYTHONNOUSERSITE":"1","SHLVL":"3","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node"}},"pid":57034,"ppid":56966},"timestamp":"2022-11-11T12:58:02.880034Z"}
{"rid":"10583267633341816633","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/Logger/JsonLogger.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//modules/Logger/JsonLogger.o","modules/Logger/JsonLogger.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","VSCODE_INJECTION":"1","HOME":"/Users/kento","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","MFLAGS":"-w -j","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","HOST":"MacbookSoon.local","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","LESS":"-R","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","__CFBundleIdentifier":"com.microsoft.VSCode","LANG":"en_GB.UTF-8","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","TERM_PROGRAM":"vscode","_CE_CONDA":"","PWD":"/Users/kento/Develop/quisps/quisp2","PAGER":"less","HOMEBREW_PREFIX":"/opt/homebrew","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","USER":"kento","USER_ZDOTDIR":"/Users/kento","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","LSCOLORS":"Gxfxcxdxbxegedabagacad","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","TERM_PROGRAM_VERSION":"1.73.1","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","OMNETPP_RELEASE":"//omnetpp-6.0.1","LOGNAME":"kento","ZSH":"/Users/kento/.oh-my-zsh","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","ZDOTDIR":"/Users/kento","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","MAKE_TERMOUT":"/dev/ttys002","_":"/opt/homebrew/bin/bear","TERM":"xterm-256color","MallocNanoZone":"0","QT_SELECT":"5","CONDA_SHLVL":"0","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","COLORTERM":"truecolor","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","MAKELEVEL":"2","dir":"","XPC_SERVICE_NAME":"0","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","XPC_FLAGS":"0x0","SHELL":"/bin/zsh","_CE_M":"","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","OLDPWD":"/Users/kento/Develop/quisps","MAKEFLAGS":"w -j","MAKE_TERMERR":"/dev/ttys002","SHLVL":"3","COMMAND_MODE":"unix2003","HOMEBREW_REPOSITORY":"/opt/homebrew","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","PYTHONNOUSERSITE":"1"}},"pid":57041,"ppid":56966},"timestamp":"2022-11-11T12:58:02.949155Z"}
{"rid":"8133337912999925191","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/Logger/LoggerModule.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//modules/Logger/LoggerModule.o","modules/Logger/LoggerModule.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"MAKEFLAGS":"w -j","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","MallocNanoZone":"0","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","MAKELEVEL":"2","OLDPWD":"/Users/kento/Develop/quisps","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","SHELL":"/bin/zsh","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","TERM_PROGRAM":"vscode","USER":"kento","VSCODE_INJECTION":"1","XPC_FLAGS":"0x0","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","TERM":"xterm-256color","MFLAGS":"-w -j","__CFBundleIdentifier":"com.microsoft.VSCode","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","ZSH":"/Users/kento/.oh-my-zsh","XPC_SERVICE_NAME":"0","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","PWD":"/Users/kento/Develop/quisps/quisp2","OMNETPP_RELEASE":"//omnetpp-6.0.1","LOGNAME":"kento","HOST":"MacbookSoon.local","_CE_M":"","CONDA_SHLVL":"0","TERM_PROGRAM_VERSION":"1.73.1","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","SHLVL":"3","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","_CE_CONDA":"","LESS":"-R","MAKE_TERMERR":"/dev/ttys002","COMMAND_MODE":"unix2003","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","PAGER":"less","LANG":"en_GB.UTF-8","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","ZDOTDIR":"/Users/kento","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","PYTHONNOUSERSITE":"1","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","USER_ZDOTDIR":"/Users/kento","MAKE_TERMOUT":"/dev/ttys002","HOMEBREW_PREFIX":"/opt/homebrew","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","QT_SELECT":"5","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","_":"/opt/homebrew/bin/bear","HOME":"/Users/kento","LSCOLORS":"Gxfxcxdxbxegedabagacad","HOMEBREW_REPOSITORY":"/opt/homebrew","dir":"","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","COLORTERM":"truecolor","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python"}},"pid":57045,"ppid":56966},"timestamp":"2022-11-11T12:58:02.990770Z"}
{"rid":"14553238359627162204","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit.o","modules/QNIC/StationaryQubit/StationaryQubit.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"CONDA_SHLVL":"0","SHLVL":"3","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","MallocNanoZone":"0","QT_SELECT":"5","SHELL":"/bin/zsh","__CFBundleIdentifier":"com.microsoft.VSCode","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","MAKE_TERMOUT":"/dev/ttys002","XPC_SERVICE_NAME":"0","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HOMEBREW_PREFIX":"/opt/homebrew","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","COMMAND_MODE":"unix2003","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","LESS":"-R","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","MAKE_TERMERR":"/dev/ttys002","OMNETPP_RELEASE":"//omnetpp-6.0.1","MAKEFLAGS":"w -j","ZSH":"/Users/kento/.oh-my-zsh","USER_ZDOTDIR":"/Users/kento","TERM_PROGRAM_VERSION":"1.73.1","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","_CE_M":"","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","HOMEBREW_REPOSITORY":"/opt/homebrew","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","HOST":"MacbookSoon.local","_CE_CONDA":"","TERM":"xterm-256color","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","XPC_FLAGS":"0x0","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","ZDOTDIR":"/Users/kento","LSCOLORS":"Gxfxcxdxbxegedabagacad","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","OLDPWD":"/Users/kento/Develop/quisps","PAGER":"less","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","HOME":"/Users/kento","VSCODE_INJECTION":"1","MFLAGS":"-w -j","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","PWD":"/Users/kento/Develop/quisps/quisp2","dir":"","_":"/opt/homebrew/bin/bear","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","TERM_PROGRAM":"vscode","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","COLORTERM":"truecolor","PYTHONNOUSERSITE":"1","USER":"kento","LANG":"en_GB.UTF-8","MAKELEVEL":"2","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","LOGNAME":"kento","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default."}},"pid":57057,"ppid":56966},"timestamp":"2022-11-11T12:58:03.118584Z"}
{"rid":"8838791210755543535","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/HardwareMonitor/HardwareMonitor.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//modules/QRSA/HardwareMonitor/HardwareMonitor.o","modules/QRSA/HardwareMonitor/HardwareMonitor.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"XPC_FLAGS":"0x0","LSCOLORS":"Gxfxcxdxbxegedabagacad","USER_ZDOTDIR":"/Users/kento","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","TERM_PROGRAM_VERSION":"1.73.1","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","ZDOTDIR":"/Users/kento","dir":"","HOME":"/Users/kento","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","VSCODE_INJECTION":"1","MFLAGS":"-w -j","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","LOGNAME":"kento","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","OLDPWD":"/Users/kento/Develop/quisps","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","MallocNanoZone":"0","TERM":"xterm-256color","PYTHONNOUSERSITE":"1","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","MAKE_TERMOUT":"/dev/ttys002","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","USER":"kento","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","HOMEBREW_REPOSITORY":"/opt/homebrew","PWD":"/Users/kento/Develop/quisps/quisp2","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","LANG":"en_GB.UTF-8","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","MAKEFLAGS":"w -j","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","SHLVL":"3","XPC_SERVICE_NAME":"0","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","MAKE_TERMERR":"/dev/ttys002","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","ZSH":"/Users/kento/.oh-my-zsh","PAGER":"less","COMMAND_MODE":"unix2003","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","TERM_PROGRAM":"vscode","LESS":"-R","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","__CFBundleIdentifier":"com.microsoft.VSCode","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","SHELL":"/bin/zsh","QT_SELECT":"5","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HOMEBREW_PREFIX":"/opt/homebrew","_CE_CONDA":"","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","HOST":"MacbookSoon.local","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","CONDA_SHLVL":"0","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","COLORTERM":"truecolor","_CE_M":"","OMNETPP_RELEASE":"//omnetpp-6.0.1","_":"/opt/homebrew/bin/bear","MAKELEVEL":"2","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11)."}},"pid":57061,"ppid":56966},"timestamp":"2022-11-11T12:58:03.163756Z"}
{"rid":"8524109316463731610","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/RuleEngine/RuleEngine.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//modules/QRSA/RuleEngine/RuleEngine.o","modules/QRSA/RuleEngine/RuleEngine.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"XPC_FLAGS":"0x0","_CE_CONDA":"","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","QT_SELECT":"5","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","LOGNAME":"kento","PAGER":"less","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","LANG":"en_GB.UTF-8","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","HOMEBREW_REPOSITORY":"/opt/homebrew","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","VSCODE_INJECTION":"1","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","MAKELEVEL":"2","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","OMNETPP_RELEASE":"//omnetpp-6.0.1","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","COMMAND_MODE":"unix2003","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","PYTHONNOUSERSITE":"1","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","USER_ZDOTDIR":"/Users/kento","TERM_PROGRAM":"vscode","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","__CFBundleIdentifier":"com.microsoft.VSCode","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","TERM_PROGRAM_VERSION":"1.73.1","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","SHLVL":"3","ZSH":"/Users/kento/.oh-my-zsh","HOMEBREW_PREFIX":"/opt/homebrew","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","LSCOLORS":"Gxfxcxdxbxegedabagacad","MallocNanoZone":"0","CONDA_SHLVL":"0","HOME":"/Users/kento","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","TERM":"xterm-256color","MAKE_TERMOUT":"/dev/ttys002","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","COLORTERM":"truecolor","PWD":"/Users/kento/Develop/quisps/quisp2","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","_CE_M":"","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","MAKE_TERMERR":"/dev/ttys002","USER":"kento","MFLAGS":"-w -j","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","HOST":"MacbookSoon.local","_":"/opt/homebrew/bin/bear","MAKEFLAGS":"w -j","SHELL":"/bin/zsh","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","LESS":"-R","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","ZDOTDIR":"/Users/kento","dir":"","OLDPWD":"/Users/kento/Develop/quisps","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","XPC_SERVICE_NAME":"0"}},"pid":57071,"ppid":56966},"timestamp":"2022-11-11T12:58:03.301531Z"}
{"rid":"15722219492003914648","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Action.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//rules/Action.o","rules/Action.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","HOME":"/Users/kento","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","CONDA_SHLVL":"0","COMMAND_MODE":"unix2003","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","dir":"","LESS":"-R","COLORTERM":"truecolor","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","TERM":"xterm-256color","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","MAKE_TERMOUT":"/dev/ttys002","MAKEFLAGS":"w -j","XPC_FLAGS":"0x0","USER":"kento","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","LOGNAME":"kento","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","SHELL":"/bin/zsh","_CE_M":"","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","ZDOTDIR":"/Users/kento","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","MAKE_TERMERR":"/dev/ttys002","TERM_PROGRAM_VERSION":"1.73.1","PAGER":"less","MAKELEVEL":"2","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","MallocNanoZone":"0","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","ZSH":"/Users/kento/.oh-my-zsh","PWD":"/Users/kento/Develop/quisps/quisp2","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","XPC_SERVICE_NAME":"0","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","__CFBundleIdentifier":"com.microsoft.VSCode","HOMEBREW_PREFIX":"/opt/homebrew","LANG":"en_GB.UTF-8","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","USER_ZDOTDIR":"/Users/kento","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","PYTHONNOUSERSITE":"1","QT_SELECT":"5","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","MFLAGS":"-w -j","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","HOMEBREW_REPOSITORY":"/opt/homebrew","_":"/opt/homebrew/bin/bear","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HOST":"MacbookSoon.local","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","SHLVL":"3","_CE_CONDA":"","OLDPWD":"/Users/kento/Develop/quisps","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","TERM_PROGRAM":"vscode","LSCOLORS":"Gxfxcxdxbxegedabagacad","VSCODE_INJECTION":"1","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","OMNETPP_RELEASE":"//omnetpp-6.0.1","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current"}},"pid":57079,"ppid":56966},"timestamp":"2022-11-11T12:58:03.451800Z"}
{"rid":"4283921040360242268","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Clause.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//rules/Clause.o","rules/Clause.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"SHELL":"/bin/zsh","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","MallocNanoZone":"0","LSCOLORS":"Gxfxcxdxbxegedabagacad","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","OLDPWD":"/Users/kento/Develop/quisps","PAGER":"less","_CE_CONDA":"","XPC_FLAGS":"0x0","LANG":"en_GB.UTF-8","MAKELEVEL":"2","USER_ZDOTDIR":"/Users/kento","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","MFLAGS":"-w -j","HOME":"/Users/kento","ZDOTDIR":"/Users/kento","MAKE_TERMOUT":"/dev/ttys002","_":"/opt/homebrew/bin/bear","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","_CE_M":"","PYTHONNOUSERSITE":"1","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","XPC_SERVICE_NAME":"0","CONDA_SHLVL":"0","COMMAND_MODE":"unix2003","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","VSCODE_INJECTION":"1","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","COLORTERM":"truecolor","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","MAKEFLAGS":"w -j","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","HOST":"MacbookSoon.local","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","HOMEBREW_PREFIX":"/opt/homebrew","OMNETPP_RELEASE":"//omnetpp-6.0.1","QT_SELECT":"5","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","ZSH":"/Users/kento/.oh-my-zsh","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","USER":"kento","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","__CFBundleIdentifier":"com.microsoft.VSCode","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","HOMEBREW_REPOSITORY":"/opt/homebrew","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","TERM":"xterm-256color","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","SHLVL":"3","dir":"","PWD":"/Users/kento/Develop/quisps/quisp2","LESS":"-R","TERM_PROGRAM_VERSION":"1.73.1","TERM_PROGRAM":"vscode","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","MAKE_TERMERR":"/dev/ttys002","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","LOGNAME":"kento","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh"}},"pid":57093,"ppid":56966},"timestamp":"2022-11-11T12:58:03.837273Z"}
{"rid":"12698961785500837151","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Condition.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//rules/Condition.o","rules/Condition.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"MAKEFLAGS":"w -j","COMMAND_MODE":"unix2003","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","HOST":"MacbookSoon.local","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","LSCOLORS":"Gxfxcxdxbxegedabagacad","OMNETPP_RELEASE":"//omnetpp-6.0.1","VSCODE_INJECTION":"1","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","ZDOTDIR":"/Users/kento","PYTHONNOUSERSITE":"1","PWD":"/Users/kento/Develop/quisps/quisp2","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","HOME":"/Users/kento","MAKE_TERMERR":"/dev/ttys002","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","_CE_CONDA":"","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","CONDA_SHLVL":"0","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","TERM_PROGRAM_VERSION":"1.73.1","COLORTERM":"truecolor","OLDPWD":"/Users/kento/Develop/quisps","TERM_PROGRAM":"vscode","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","XPC_FLAGS":"0x0","_":"/opt/homebrew/bin/bear","QT_SELECT":"5","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","MAKE_TERMOUT":"/dev/ttys002","__CFBundleIdentifier":"com.microsoft.VSCode","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","TERM":"xterm-256color","USER":"kento","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","_CE_M":"","MFLAGS":"-w -j","PAGER":"less","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","ZSH":"/Users/kento/.oh-my-zsh","dir":"","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","MallocNanoZone":"0","SHELL":"/bin/zsh","LANG":"en_GB.UTF-8","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","LESS":"-R","USER_ZDOTDIR":"/Users/kento","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","SHLVL":"3","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","HOMEBREW_REPOSITORY":"/opt/homebrew","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","XPC_SERVICE_NAME":"0","MAKELEVEL":"2","HOMEBREW_PREFIX":"/opt/homebrew","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","LOGNAME":"kento"}},"pid":57099,"ppid":56966},"timestamp":"2022-11-11T12:58:03.932774Z"}
{"rid":"10966403596754696188","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Rule.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//rules/Rule.o","rules/Rule.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","_":"/opt/homebrew/bin/bear","MFLAGS":"-w -j","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","LESS":"-R","USER_ZDOTDIR":"/Users/kento","PYTHONNOUSERSITE":"1","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","ZDOTDIR":"/Users/kento","MallocNanoZone":"0","SHELL":"/bin/zsh","OMNETPP_RELEASE":"//omnetpp-6.0.1","dir":"","QT_SELECT":"5","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","ZSH":"/Users/kento/.oh-my-zsh","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","LANG":"en_GB.UTF-8","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","USER":"kento","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","MAKELEVEL":"2","COMMAND_MODE":"unix2003","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","_CE_M":"","HOST":"MacbookSoon.local","MAKE_TERMOUT":"/dev/ttys002","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","XPC_FLAGS":"0x0","TERM":"xterm-256color","PAGER":"less","TERM_PROGRAM_VERSION":"1.73.1","PWD":"/Users/kento/Develop/quisps/quisp2","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","HOMEBREW_REPOSITORY":"/opt/homebrew","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","TERM_PROGRAM":"vscode","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","_CE_CONDA":"","SHLVL":"3","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","LOGNAME":"kento","COLORTERM":"truecolor","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","VSCODE_INJECTION":"1","__CFBundleIdentifier":"com.microsoft.VSCode","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","XPC_SERVICE_NAME":"0","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","LSCOLORS":"Gxfxcxdxbxegedabagacad","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","OLDPWD":"/Users/kento/Develop/quisps","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","HOME":"/Users/kento","CONDA_SHLVL":"0","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","MAKE_TERMERR":"/dev/ttys002","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","MAKEFLAGS":"w -j","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HOMEBREW_PREFIX":"/opt/homebrew"}},"pid":57106,"ppid":56966},"timestamp":"2022-11-11T12:58:04.109700Z"}
{"rid":"15355141316399431068","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/RuleSet.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//rules/RuleSet.o","rules/RuleSet.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"CONDA_SHLVL":"0","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","LANG":"en_GB.UTF-8","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","XPC_FLAGS":"0x0","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","SHELL":"/bin/zsh","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","HOMEBREW_PREFIX":"/opt/homebrew","dir":"","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","MAKELEVEL":"2","COLORTERM":"truecolor","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","TERM_PROGRAM":"vscode","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","HOST":"MacbookSoon.local","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","__CFBundleIdentifier":"com.microsoft.VSCode","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","LESS":"-R","MFLAGS":"-w -j","HOMEBREW_REPOSITORY":"/opt/homebrew","MAKE_TERMOUT":"/dev/ttys002","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","MAKEFLAGS":"w -j","PWD":"/Users/kento/Develop/quisps/quisp2","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","_":"/opt/homebrew/bin/bear","HOME":"/Users/kento","COMMAND_MODE":"unix2003","ZDOTDIR":"/Users/kento","XPC_SERVICE_NAME":"0","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","OMNETPP_RELEASE":"//omnetpp-6.0.1","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","MAKE_TERMERR":"/dev/ttys002","SHLVL":"3","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","_CE_CONDA":"","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","PYTHONNOUSERSITE":"1","OLDPWD":"/Users/kento/Develop/quisps","PAGER":"less","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","ZSH":"/Users/kento/.oh-my-zsh","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","_CE_M":"","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","QT_SELECT":"5","LSCOLORS":"Gxfxcxdxbxegedabagacad","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","MallocNanoZone":"0","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","TERM_PROGRAM_VERSION":"1.73.1","TERM":"xterm-256color","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","LOGNAME":"kento","VSCODE_INJECTION":"1","USER":"kento","USER_ZDOTDIR":"/Users/kento"}},"pid":57111,"ppid":56966},"timestamp":"2022-11-11T12:58:04.274810Z"}
{"rid":"2361044442301615619","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//messages/base_messages_m.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//messages/base_messages_m.o","messages/base_messages_m.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"HOST":"MacbookSoon.local","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","USER":"kento","_":"/opt/homebrew/bin/bear","OMNETPP_RELEASE":"//omnetpp-6.0.1","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","HOME":"/Users/kento","COLORTERM":"truecolor","LOGNAME":"kento","CONDA_SHLVL":"0","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","HOMEBREW_PREFIX":"/opt/homebrew","LSCOLORS":"Gxfxcxdxbxegedabagacad","PAGER":"less","TERM_PROGRAM_VERSION":"1.73.1","SHELL":"/bin/zsh","COMMAND_MODE":"unix2003","MallocNanoZone":"0","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","MAKELEVEL":"2","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","__CFBundleIdentifier":"com.microsoft.VSCode","MAKE_TERMERR":"/dev/ttys002","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","PYTHONNOUSERSITE":"1","OLDPWD":"/Users/kento/Develop/quisps","MAKEFLAGS":"w -j","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","QT_SELECT":"5","MAKE_TERMOUT":"/dev/ttys002","TERM":"xterm-256color","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","dir":"","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","ZDOTDIR":"/Users/kento","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","MFLAGS":"-w -j","SHLVL":"3","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","XPC_FLAGS":"0x0","USER_ZDOTDIR":"/Users/kento","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","_CE_CONDA":"","VSCODE_INJECTION":"1","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","TERM_PROGRAM":"vscode","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","LANG":"en_GB.UTF-8","HOMEBREW_REPOSITORY":"/opt/homebrew","PWD":"/Users/kento/Develop/quisps/quisp2","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","LESS":"-R","XPC_SERVICE_NAME":"0","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","_CE_M":"","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","ZSH":"/Users/kento/.oh-my-zsh"}},"pid":57119,"ppid":56966},"timestamp":"2022-11-11T12:58:04.587533Z"}
{"rid":"6226664751814617567","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//messages/connection_setup_messages_m.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//messages/connection_setup_messages_m.o","messages/connection_setup_messages_m.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","PWD":"/Users/kento/Develop/quisps/quisp2","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","QT_SELECT":"5","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","XPC_FLAGS":"0x0","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","MAKEFLAGS":"w -j","COMMAND_MODE":"unix2003","dir":"","_CE_M":"","TERM":"xterm-256color","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","TERM_PROGRAM":"vscode","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","SHLVL":"3","MAKELEVEL":"2","PAGER":"less","USER":"kento","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","LSCOLORS":"Gxfxcxdxbxegedabagacad","SHELL":"/bin/zsh","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","USER_ZDOTDIR":"/Users/kento","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","_CE_CONDA":"","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","COLORTERM":"truecolor","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","LESS":"-R","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","VSCODE_INJECTION":"1","MFLAGS":"-w -j","XPC_SERVICE_NAME":"0","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","_":"/opt/homebrew/bin/bear","HOST":"MacbookSoon.local","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","LANG":"en_GB.UTF-8","HOMEBREW_REPOSITORY":"/opt/homebrew","ZSH":"/Users/kento/.oh-my-zsh","LOGNAME":"kento","PYTHONNOUSERSITE":"1","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","MallocNanoZone":"0","TERM_PROGRAM_VERSION":"1.73.1","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","HOMEBREW_PREFIX":"/opt/homebrew","OLDPWD":"/Users/kento/Develop/quisps","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","__CFBundleIdentifier":"com.microsoft.VSCode","HOME":"/Users/kento","MAKE_TERMOUT":"/dev/ttys002","OMNETPP_RELEASE":"//omnetpp-6.0.1","ZDOTDIR":"/Users/kento","CONDA_SHLVL":"0","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","MAKE_TERMERR":"/dev/ttys002"}},"pid":57131,"ppid":56966},"timestamp":"2022-11-11T12:58:05.003903Z"}
{"rid":"8019259291600729859","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//messages/entanglement_swapping_messages_m.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//messages/entanglement_swapping_messages_m.o","messages/entanglement_swapping_messages_m.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"COMMAND_MODE":"unix2003","SHELL":"/bin/zsh","OMNETPP_RELEASE":"//omnetpp-6.0.1","MAKELEVEL":"2","PWD":"/Users/kento/Develop/quisps/quisp2","SHLVL":"3","_":"/opt/homebrew/bin/bear","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","USER":"kento","ZDOTDIR":"/Users/kento","_CE_M":"","TERM_PROGRAM":"vscode","QT_SELECT":"5","OLDPWD":"/Users/kento/Develop/quisps","MAKE_TERMOUT":"/dev/ttys002","USER_ZDOTDIR":"/Users/kento","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","VSCODE_INJECTION":"1","XPC_SERVICE_NAME":"0","MallocNanoZone":"0","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","MAKE_TERMERR":"/dev/ttys002","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","LSCOLORS":"Gxfxcxdxbxegedabagacad","LANG":"en_GB.UTF-8","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","TERM":"xterm-256color","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","ZSH":"/Users/kento/.oh-my-zsh","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","__CFBundleIdentifier":"com.microsoft.VSCode","_CE_CONDA":"","HOMEBREW_REPOSITORY":"/opt/homebrew","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","XPC_FLAGS":"0x0","MAKEFLAGS":"w -j","COLORTERM":"truecolor","LESS":"-R","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","LOGNAME":"kento","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","HOMEBREW_PREFIX":"/opt/homebrew","dir":"","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","HOST":"MacbookSoon.local","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","PAGER":"less","HOME":"/Users/kento","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","CONDA_SHLVL":"0","TERM_PROGRAM_VERSION":"1.73.1","MFLAGS":"-w -j","PYTHONNOUSERSITE":"1","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node"}},"pid":57137,"ppid":56966},"timestamp":"2022-11-11T12:58:05.267362Z"}
{"rid":"3827137622436596718","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//messages/HOM_ipc_messages_m.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//messages/HOM_ipc_messages_m.o","messages/HOM_ipc_messages_m.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"HOMEBREW_REPOSITORY":"/opt/homebrew","_":"/opt/homebrew/bin/bear","TERM_PROGRAM_VERSION":"1.73.1","HOST":"MacbookSoon.local","MAKEFLAGS":"w -j","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","OLDPWD":"/Users/kento/Develop/quisps","MallocNanoZone":"0","_CE_CONDA":"","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","MFLAGS":"-w -j","ZSH":"/Users/kento/.oh-my-zsh","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","XPC_FLAGS":"0x0","HOMEBREW_PREFIX":"/opt/homebrew","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","SHLVL":"3","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","COLORTERM":"truecolor","_CE_M":"","CONDA_SHLVL":"0","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","ZDOTDIR":"/Users/kento","__CFBundleIdentifier":"com.microsoft.VSCode","LSCOLORS":"Gxfxcxdxbxegedabagacad","TERM":"xterm-256color","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","MAKELEVEL":"2","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","PWD":"/Users/kento/Develop/quisps/quisp2","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","dir":"","COMMAND_MODE":"unix2003","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","PAGER":"less","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","PYTHONNOUSERSITE":"1","USER":"kento","USER_ZDOTDIR":"/Users/kento","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","QT_SELECT":"5","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","LANG":"en_GB.UTF-8","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","MAKE_TERMERR":"/dev/ttys002","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","VSCODE_INJECTION":"1","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","HOME":"/Users/kento","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","LOGNAME":"kento","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","XPC_SERVICE_NAME":"0","MAKE_TERMOUT":"/dev/ttys002","LESS":"-R","SHELL":"/bin/zsh","OMNETPP_RELEASE":"//omnetpp-6.0.1","TERM_PROGRAM":"vscode","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners"}},"pid":57143,"ppid":56966},"timestamp":"2022-11-11T12:58:05.598002Z"}
{"rid":"15097255231842952958","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//messages/link_generation_messages_m.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//messages/link_generation_messages_m.o","messages/link_generation_messages_m.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"TERM":"xterm-256color","ZDOTDIR":"/Users/kento","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","__CFBundleIdentifier":"com.microsoft.VSCode","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","HOME":"/Users/kento","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","PAGER":"less","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","MAKE_TERMOUT":"/dev/ttys002","MAKE_TERMERR":"/dev/ttys002","XPC_SERVICE_NAME":"0","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","USER":"kento","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","LESS":"-R","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","TERM_PROGRAM":"vscode","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","LANG":"en_GB.UTF-8","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","SHLVL":"3","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","HOMEBREW_REPOSITORY":"/opt/homebrew","QT_SELECT":"5","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","LSCOLORS":"Gxfxcxdxbxegedabagacad","COLORTERM":"truecolor","COMMAND_MODE":"unix2003","MAKEFLAGS":"w -j","LOGNAME":"kento","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","MFLAGS":"-w -j","ZSH":"/Users/kento/.oh-my-zsh","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","dir":"","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","_CE_M":"","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","HOST":"MacbookSoon.local","VSCODE_INJECTION":"1","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","OLDPWD":"/Users/kento/Develop/quisps","XPC_FLAGS":"0x0","_CE_CONDA":"","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","CONDA_SHLVL":"0","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","HOMEBREW_PREFIX":"/opt/homebrew","MAKELEVEL":"2","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","MallocNanoZone":"0","SHELL":"/bin/zsh","PWD":"/Users/kento/Develop/quisps/quisp2","OMNETPP_RELEASE":"//omnetpp-6.0.1","USER_ZDOTDIR":"/Users/kento","_":"/opt/homebrew/bin/bear","PYTHONNOUSERSITE":"1","TERM_PROGRAM_VERSION":"1.73.1"}},"pid":57153,"ppid":56966},"timestamp":"2022-11-11T12:58:06.341723Z"}
{"rid":"14045222429392794299","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//messages/purification_messages_m.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//messages/purification_messages_m.o","messages/purification_messages_m.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"LANG":"en_GB.UTF-8","MFLAGS":"-w -j","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","USER_ZDOTDIR":"/Users/kento","OLDPWD":"/Users/kento/Develop/quisps","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","MAKEFLAGS":"w -j","PWD":"/Users/kento/Develop/quisps/quisp2","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","XPC_SERVICE_NAME":"0","MAKE_TERMOUT":"/dev/ttys002","TERM_PROGRAM_VERSION":"1.73.1","ZSH":"/Users/kento/.oh-my-zsh","HOMEBREW_REPOSITORY":"/opt/homebrew","LOGNAME":"kento","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","HOME":"/Users/kento","QT_SELECT":"5","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","MallocNanoZone":"0","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","_CE_CONDA":"","LESS":"-R","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","COMMAND_MODE":"unix2003","HOMEBREW_PREFIX":"/opt/homebrew","ZDOTDIR":"/Users/kento","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","MAKE_TERMERR":"/dev/ttys002","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","VSCODE_INJECTION":"1","OMNETPP_RELEASE":"//omnetpp-6.0.1","SHELL":"/bin/zsh","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","__CFBundleIdentifier":"com.microsoft.VSCode","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","HOST":"MacbookSoon.local","MAKELEVEL":"2","PAGER":"less","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","_":"/opt/homebrew/bin/bear","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","USER":"kento","SHLVL":"3","XPC_FLAGS":"0x0","dir":"","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","CONDA_SHLVL":"0","TERM":"xterm-256color","COLORTERM":"truecolor","_CE_M":"","PYTHONNOUSERSITE":"1","TERM_PROGRAM":"vscode","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","LSCOLORS":"Gxfxcxdxbxegedabagacad","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HOMEBREW_CELLAR":"/opt/homebrew/Cellar"}},"pid":57165,"ppid":56966},"timestamp":"2022-11-11T12:58:07.059503Z"}
{"rid":"3732610810348144225","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//messages/QNode_ipc_messages_m.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//messages/QNode_ipc_messages_m.o","messages/QNode_ipc_messages_m.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"HOMEBREW_PREFIX":"/opt/homebrew","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","COMMAND_MODE":"unix2003","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","QT_SELECT":"5","HOMEBREW_REPOSITORY":"/opt/homebrew","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","PYTHONNOUSERSITE":"1","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","LSCOLORS":"Gxfxcxdxbxegedabagacad","MAKELEVEL":"2","MAKEFLAGS":"w -j","USER":"kento","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","XPC_SERVICE_NAME":"0","TERM_PROGRAM":"vscode","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","TERM_PROGRAM_VERSION":"1.73.1","SHLVL":"3","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","LESS":"-R","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","USER_ZDOTDIR":"/Users/kento","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","CONDA_SHLVL":"0","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","XPC_FLAGS":"0x0","_CE_CONDA":"","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","MFLAGS":"-w -j","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","OLDPWD":"/Users/kento/Develop/quisps","ZSH":"/Users/kento/.oh-my-zsh","MAKE_TERMERR":"/dev/ttys002","MallocNanoZone":"0","SHELL":"/bin/zsh","LANG":"en_GB.UTF-8","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","TERM":"xterm-256color","_CE_M":"","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","PAGER":"less","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","PWD":"/Users/kento/Develop/quisps/quisp2","MAKE_TERMOUT":"/dev/ttys002","HOST":"MacbookSoon.local","HOME":"/Users/kento","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","_":"/opt/homebrew/bin/bear","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","__CFBundleIdentifier":"com.microsoft.VSCode","COLORTERM":"truecolor","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","dir":"","ZDOTDIR":"/Users/kento","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","VSCODE_INJECTION":"1","OMNETPP_RELEASE":"//omnetpp-6.0.1","LOGNAME":"kento"}},"pid":57172,"ppid":56966},"timestamp":"2022-11-11T12:58:07.516178Z"}
{"rid":"14189144009117214855","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//messages/tomography_messages_m.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-o","out/clang-release//messages/tomography_messages_m.o","messages/tomography_messages_m.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"dir":"","HOST":"MacbookSoon.local","_CE_CONDA":"","HOMEBREW_REPOSITORY":"/opt/homebrew","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","MAKE_TERMERR":"/dev/ttys002","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","SHELL":"/bin/zsh","LESS":"-R","ZDOTDIR":"/Users/kento","TERM_PROGRAM":"vscode","MFLAGS":"-w -j","MallocNanoZone":"0","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","USER_ZDOTDIR":"/Users/kento","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","TERM_PROGRAM_VERSION":"1.73.1","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","XPC_SERVICE_NAME":"0","TERM":"xterm-256color","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","PWD":"/Users/kento/Develop/quisps/quisp2","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","COLORTERM":"truecolor","HOMEBREW_PREFIX":"/opt/homebrew","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","USER":"kento","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","COMMAND_MODE":"unix2003","__CFBundleIdentifier":"com.microsoft.VSCode","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","MAKELEVEL":"2","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","LANG":"en_GB.UTF-8","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","CONDA_SHLVL":"0","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","LOGNAME":"kento","LSCOLORS":"Gxfxcxdxbxegedabagacad","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","ZSH":"/Users/kento/.oh-my-zsh","HOME":"/Users/kento","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","PAGER":"less","XPC_FLAGS":"0x0","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","VSCODE_INJECTION":"1","OLDPWD":"/Users/kento/Develop/quisps","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","MAKE_TERMOUT":"/dev/ttys002","MAKEFLAGS":"w -j","_":"/opt/homebrew/bin/bear","OMNETPP_RELEASE":"//omnetpp-6.0.1","QT_SELECT":"5","PYTHONNOUSERSITE":"1","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","SHLVL":"3","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","_CE_M":""}},"pid":57174,"ppid":56966},"timestamp":"2022-11-11T12:58:07.528585Z"}
{"rid":"11232297332477247038","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:12.947984Z"}
{"rid":"12698961785500837151","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:14.392025Z"}
{"rid":"4283921040360242268","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:15.432685Z"}
{"rid":"2361044442301615619","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:34.905323Z"}
{"rid":"8019259291600729859","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:36.551957Z"}
{"rid":"3827137622436596718","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:36.751665Z"}
{"rid":"14045222429392794299","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:40.302484Z"}
{"rid":"10966403596754696188","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:40.313335Z"}
{"rid":"15097255231842952958","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:40.318962Z"}
{"rid":"6226664751814617567","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:40.323030Z"}
{"rid":"15722219492003914648","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:40.323464Z"}
{"rid":"12682628218604485730","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:40.323746Z"}
{"rid":"17387639833148150975","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:40.328024Z"}
{"rid":"8524109316463731610","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:41.473120Z"}
{"rid":"15355141316399431068","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:42.058297Z"}
{"rid":"3732610810348144225","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:42.605660Z"}
{"rid":"10583267633341816633","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:43.445081Z"}
{"rid":"14189144009117214855","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:43.727583Z"}
{"rid":"8133337912999925191","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:43.929748Z"}
{"rid":"8838791210755543535","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:44.412100Z"}
{"rid":"14553238359627162204","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:49.183246Z"}
{"rid":"13519871208770614289","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-shared","-o","out/clang-release//libquisp.dylib","out/clang-release//backends/ErrorTracking/Backend.o","out/clang-release//backends/ErrorTracking/Qubit.o","out/clang-release//channels/QuantumChannel.o","out/clang-release//modules/dummyModule.o","out/clang-release//modules/Application/Application.o","out/clang-release//modules/Backend/Backend.o","out/clang-release//modules/Common/Queue.o","out/clang-release//modules/Common/Router.o","out/clang-release//modules/Logger/JsonLogger.o","out/clang-release//modules/Logger/LoggerBase.o","out/clang-release//modules/Logger/LoggerModule.o","out/clang-release//modules/PhysicalConnection/BSA/BellStateAnalyzer.o","out/clang-release//modules/PhysicalConnection/BSA/HOMController.o","out/clang-release//modules/PhysicalConnection/EPPS/EntangledPhotonPairSource.o","out/clang-release//modules/PhysicalConnection/EPPS/SPDC_Controller.o","out/clang-release//modules/QNIC/PhotonicSwitch/PhotonicSwitch.o","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit.o","out/clang-release//modules/QRSA/ConnectionManager/ConnectionManager.o","out/clang-release//modules/QRSA/HardwareMonitor/HardwareMonitor.o","out/clang-release//modules/QRSA/RealTimeController/RealTimeController.o","out/clang-release//modules/QRSA/RoutingDaemon/RoutingDaemon.o","out/clang-release//modules/QRSA/RuleEngine/RuleEngine.o","out/clang-release//modules/QRSA/RuleEngine/BellPairStore/BellPairStore.o","out/clang-release//modules/QRSA/RuleEngine/QNicRecord/QNicRecord.o","out/clang-release//modules/QRSA/RuleEngine/QNicStore/QNicStore.o","out/clang-release//modules/QRSA/RuleEngine/QubitRecord/QubitRecord.o","out/clang-release//modules/QRSA/RuleEngine/RuleSetStore/RuleSetStore.o","out/clang-release//rules/Action.o","out/clang-release//rules/Clause.o","out/clang-release//rules/Condition.o","out/clang-release//rules/Rule.o","out/clang-release//rules/RuleSet.o","out/clang-release//rules/Active/ActiveCondition.o","out/clang-release//rules/Active/ActiveRule.o","out/clang-release//rules/Active/ActiveRuleSet.o","out/clang-release//rules/Active/actions/ActiveAction.o","out/clang-release//rules/Active/actions/DoublePurifyAction.o","out/clang-release//rules/Active/actions/DoubleSelectionAction.o","out/clang-release//rules/Active/actions/DoubleSelectionDualAction.o","out/clang-release//rules/Active/actions/DoubleSelectionDualActionSecond.o","out/clang-release//rules/Active/actions/PurifyAction.o","out/clang-release//rules/Active/actions/RandomMeasureAction.o","out/clang-release//rules/Active/actions/SimultaneousSwappingAction.o","out/clang-release//rules/Active/actions/SwappingAction.o","out/clang-release//rules/Active/actions/WaitAction.o","out/clang-release//rules/Active/actions/base/TransferMessage.o","out/clang-release//rules/Active/clauses/EnoughResourceClause.o","out/clang-release//rules/Active/clauses/FidelityClause.o","out/clang-release//rules/Active/clauses/MeasureCountClause.o","out/clang-release//rules/Active/clauses/PurificationCountClause.o","out/clang-release//rules/Active/clauses/WaitClause.o","out/clang-release//test_utils/Gate.o","out/clang-release//test_utils/QNode.o","out/clang-release//test_utils/Simulation.o","out/clang-release//test_utils/StaticEnv.o","out/clang-release//test_utils/UtilFunctions.o","out/clang-release//utils/ComponentProvider.o","out/clang-release//utils/DefaultComponentProviderStrategy.o","out/clang-release//PhotonicQubit_m.o","out/clang-release//messages/base_messages_m.o","out/clang-release//messages/connection_setup_messages_m.o","out/clang-release//messages/entanglement_swapping_messages_m.o","out/clang-release//messages/HOM_ipc_messages_m.o","out/clang-release//messages/link_generation_messages_m.o","out/clang-release//messages/purification_messages_m.o","out/clang-release//messages/QNode_ipc_messages_m.o","out/clang-release//messages/tomography_messages_m.o","-Wl,-all_load","-loppenvir","-loppsim","-lstdc++","-L/opt/homebrew/opt/openssl@3/lib","-L/opt/homebrew/opt/openssl@3/lib","-Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib","-Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib","-Wl,-rpath,.","-L/usr/lib","-L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib","-F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib","-L/Users/kento/Develop/work/omnetpp-6.0.1/lib"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","XPC_SERVICE_NAME":"0","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","USER":"kento","LSCOLORS":"Gxfxcxdxbxegedabagacad","MAKELEVEL":"2","OLDPWD":"/Users/kento/Develop/quisps","ZDOTDIR":"/Users/kento","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","HOME":"/Users/kento","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","LESS":"-R","LANG":"en_GB.UTF-8","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","COMMAND_MODE":"unix2003","HOMEBREW_PREFIX":"/opt/homebrew","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","MFLAGS":"-w -j","HOMEBREW_REPOSITORY":"/opt/homebrew","XPC_FLAGS":"0x0","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","CONDA_SHLVL":"0","PYTHONNOUSERSITE":"1","MAKE_TERMERR":"/dev/ttys002","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","PAGER":"less","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","SHLVL":"3","LOGNAME":"kento","COLORTERM":"truecolor","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","TERM_PROGRAM":"vscode","VSCODE_INJECTION":"1","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","__CFBundleIdentifier":"com.microsoft.VSCode","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","_":"/opt/homebrew/bin/bear","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","_CE_M":"","_CE_CONDA":"","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","QT_SELECT":"5","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","SHELL":"/bin/zsh","MallocNanoZone":"0","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","MAKE_TERMOUT":"/dev/ttys002","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","OMNETPP_RELEASE":"//omnetpp-6.0.1","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","USER_ZDOTDIR":"/Users/kento","TERM_PROGRAM_VERSION":"1.73.1","ZSH":"/Users/kento/.oh-my-zsh","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","MAKEFLAGS":"w -j","TERM":"xterm-256color","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","dir":"","PWD":"/Users/kento/Develop/quisps/quisp2","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","HOST":"MacbookSoon.local","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins"}},"pid":57283,"ppid":56966},"timestamp":"2022-11-11T12:58:49.252037Z"}
{"rid":"13519871208770614289","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:49.622837Z"}
{"rid":"11861042926137692721","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//backends/ErrorTracking/Qubit_memory_error_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//backends/ErrorTracking/Qubit_memory_error_test.o","backends/ErrorTracking/Qubit_memory_error_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"dir":"","PAGER":"less","PYTHONNOUSERSITE":"1","USER":"kento","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","MAKE_TERMOUT":"/dev/ttys002","COLORTERM":"truecolor","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","SHELL":"/bin/zsh","LANG":"en_GB.UTF-8","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","MAKE_TERMERR":"/dev/ttys002","LESS":"-R","TERM_PROGRAM":"vscode","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","QT_SELECT":"5","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","MFLAGS":"-w","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","ZDOTDIR":"/Users/kento","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","HOME":"/Users/kento","XPC_SERVICE_NAME":"0","PWD":"/Users/kento/Develop/quisps/quisp2","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HOMEBREW_REPOSITORY":"/opt/homebrew","TERM":"xterm-256color","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","XPC_FLAGS":"0x0","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","OLDPWD":"/Users/kento/Develop/quisps","OMNETPP_RELEASE":"//omnetpp-6.0.1","ZSH":"/Users/kento/.oh-my-zsh","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","USER_ZDOTDIR":"/Users/kento","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","__CFBundleIdentifier":"com.microsoft.VSCode","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","LSCOLORS":"Gxfxcxdxbxegedabagacad","LOGNAME":"kento","VSCODE_INJECTION":"1","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","MAKEFLAGS":"w","_CE_M":"","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","MallocNanoZone":"0","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","SHLVL":"3","TERM_PROGRAM_VERSION":"1.73.1","_CE_CONDA":"","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","_":"/opt/homebrew/bin/bear","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","CONDA_SHLVL":"0","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","COMMAND_MODE":"unix2003","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","MAKELEVEL":"2","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HOST":"MacbookSoon.local","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","HOMEBREW_PREFIX":"/opt/homebrew","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/"}},"pid":57332,"ppid":57295},"timestamp":"2022-11-11T12:58:50.186745Z"}
{"rid":"11861042926137692721","terminated":{"status":"0"},"timestamp":"2022-11-11T12:58:58.985830Z"}
{"rid":"7916646247439358192","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/Application/Application_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/Application/Application_test.o","modules/Application/Application_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","MAKE_TERMERR":"/dev/ttys002","USER_ZDOTDIR":"/Users/kento","TERM":"xterm-256color","MAKE_TERMOUT":"/dev/ttys002","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","_CE_M":"","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","CONDA_SHLVL":"0","OMNETPP_RELEASE":"//omnetpp-6.0.1","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","USER":"kento","LOGNAME":"kento","LANG":"en_GB.UTF-8","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","HOME":"/Users/kento","ZDOTDIR":"/Users/kento","XPC_FLAGS":"0x0","VSCODE_INJECTION":"1","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","TERM_PROGRAM":"vscode","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","MAKEFLAGS":"w","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","PYTHONNOUSERSITE":"1","COMMAND_MODE":"unix2003","_":"/opt/homebrew/bin/bear","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","SHLVL":"3","MallocNanoZone":"0","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","ZSH":"/Users/kento/.oh-my-zsh","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","TERM_PROGRAM_VERSION":"1.73.1","PWD":"/Users/kento/Develop/quisps/quisp2","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","LESS":"-R","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","HOST":"MacbookSoon.local","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","OLDPWD":"/Users/kento/Develop/quisps","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HOMEBREW_PREFIX":"/opt/homebrew","XPC_SERVICE_NAME":"0","MAKELEVEL":"2","PAGER":"less","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","_CE_CONDA":"","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","HOMEBREW_REPOSITORY":"/opt/homebrew","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","QT_SELECT":"5","MFLAGS":"-w","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","LSCOLORS":"Gxfxcxdxbxegedabagacad","SHELL":"/bin/zsh","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","__CFBundleIdentifier":"com.microsoft.VSCode","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","dir":"","COLORTERM":"truecolor"}},"pid":57359,"ppid":57295},"timestamp":"2022-11-11T12:58:59.138613Z"}
{"rid":"7916646247439358192","terminated":{"status":"0"},"timestamp":"2022-11-11T12:59:07.596639Z"}
{"rid":"15564214359148728397","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/Backend/Backend_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/Backend/Backend_test.o","modules/Backend/Backend_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"_CE_M":"","HOMEBREW_PREFIX":"/opt/homebrew","HOMEBREW_REPOSITORY":"/opt/homebrew","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","XPC_FLAGS":"0x0","TERM":"xterm-256color","ZSH":"/Users/kento/.oh-my-zsh","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","COMMAND_MODE":"unix2003","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","LOGNAME":"kento","PAGER":"less","CONDA_SHLVL":"0","dir":"","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","QT_SELECT":"5","MAKE_TERMERR":"/dev/ttys002","LANG":"en_GB.UTF-8","TERM_PROGRAM_VERSION":"1.73.1","LSCOLORS":"Gxfxcxdxbxegedabagacad","OLDPWD":"/Users/kento/Develop/quisps","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","SHELL":"/bin/zsh","TERM_PROGRAM":"vscode","_":"/opt/homebrew/bin/bear","MAKEFLAGS":"w","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","LESS":"-R","VSCODE_INJECTION":"1","COLORTERM":"truecolor","MFLAGS":"-w","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","PWD":"/Users/kento/Develop/quisps/quisp2","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","SHLVL":"3","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","ZDOTDIR":"/Users/kento","MallocNanoZone":"0","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","XPC_SERVICE_NAME":"0","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","__CFBundleIdentifier":"com.microsoft.VSCode","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","MAKELEVEL":"2","HOME":"/Users/kento","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","OMNETPP_RELEASE":"//omnetpp-6.0.1","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","PYTHONNOUSERSITE":"1","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","USER":"kento","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","_CE_CONDA":"","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","USER_ZDOTDIR":"/Users/kento","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","HOST":"MacbookSoon.local","MAKE_TERMOUT":"/dev/ttys002","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]"}},"pid":57388,"ppid":57295},"timestamp":"2022-11-11T12:59:07.751181Z"}
{"rid":"15564214359148728397","terminated":{"status":"0"},"timestamp":"2022-11-11T12:59:16.108516Z"}
{"rid":"9074447444194922660","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/Logger/JsonLogger_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/Logger/JsonLogger_test.o","modules/Logger/JsonLogger_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","SHELL":"/bin/zsh","SHLVL":"3","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","MAKE_TERMOUT":"/dev/ttys002","MAKELEVEL":"2","HOMEBREW_PREFIX":"/opt/homebrew","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","TERM":"xterm-256color","LOGNAME":"kento","USER":"kento","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","HOME":"/Users/kento","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HOMEBREW_REPOSITORY":"/opt/homebrew","PAGER":"less","dir":"","QT_SELECT":"5","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","ZDOTDIR":"/Users/kento","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","MAKE_TERMERR":"/dev/ttys002","_CE_M":"","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","COLORTERM":"truecolor","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","_CE_CONDA":"","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","ZSH":"/Users/kento/.oh-my-zsh","HOST":"MacbookSoon.local","LESS":"-R","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","PYTHONNOUSERSITE":"1","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","TERM_PROGRAM_VERSION":"1.73.1","OMNETPP_RELEASE":"//omnetpp-6.0.1","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","USER_ZDOTDIR":"/Users/kento","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","OLDPWD":"/Users/kento/Develop/quisps","XPC_FLAGS":"0x0","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","MallocNanoZone":"0","_":"/opt/homebrew/bin/bear","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","VSCODE_INJECTION":"1","__CFBundleIdentifier":"com.microsoft.VSCode","LANG":"en_GB.UTF-8","XPC_SERVICE_NAME":"0","MFLAGS":"-w","CONDA_SHLVL":"0","MAKEFLAGS":"w","TERM_PROGRAM":"vscode","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","LSCOLORS":"Gxfxcxdxbxegedabagacad","PWD":"/Users/kento/Develop/quisps/quisp2","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","COMMAND_MODE":"unix2003","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda"}},"pid":57413,"ppid":57295},"timestamp":"2022-11-11T12:59:16.267781Z"}
{"rid":"9074447444194922660","terminated":{"status":"0"},"timestamp":"2022-11-11T12:59:26.783215Z"}
{"rid":"9450610773667209649","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/Logger/LoggerModule_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/Logger/LoggerModule_test.o","modules/Logger/LoggerModule_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"USER_ZDOTDIR":"/Users/kento","USER":"kento","MFLAGS":"-w","LESS":"-R","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","MallocNanoZone":"0","ZSH":"/Users/kento/.oh-my-zsh","_CE_CONDA":"","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","PAGER":"less","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","COMMAND_MODE":"unix2003","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","_CE_M":"","VSCODE_INJECTION":"1","HOMEBREW_REPOSITORY":"/opt/homebrew","SHLVL":"3","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","COLORTERM":"truecolor","MAKE_TERMERR":"/dev/ttys002","QT_SELECT":"5","XPC_FLAGS":"0x0","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","SHELL":"/bin/zsh","OLDPWD":"/Users/kento/Develop/quisps","_":"/opt/homebrew/bin/bear","TERM_PROGRAM":"vscode","HOST":"MacbookSoon.local","PYTHONNOUSERSITE":"1","LANG":"en_GB.UTF-8","ZDOTDIR":"/Users/kento","LSCOLORS":"Gxfxcxdxbxegedabagacad","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","dir":"","OMNETPP_RELEASE":"//omnetpp-6.0.1","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","LOGNAME":"kento","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","CONDA_SHLVL":"0","MAKEFLAGS":"w","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","XPC_SERVICE_NAME":"0","MAKELEVEL":"2","__CFBundleIdentifier":"com.microsoft.VSCode","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","PWD":"/Users/kento/Develop/quisps/quisp2","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","TERM_PROGRAM_VERSION":"1.73.1","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HOME":"/Users/kento","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","HOMEBREW_PREFIX":"/opt/homebrew","TERM":"xterm-256color","MAKE_TERMOUT":"/dev/ttys002"}},"pid":57442,"ppid":57295},"timestamp":"2022-11-11T12:59:26.939306Z"}
{"rid":"9450610773667209649","terminated":{"status":"0"},"timestamp":"2022-11-11T12:59:35.592305Z"}
{"rid":"8970849284528445073","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit_gate_error_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit_gate_error_test.o","modules/QNIC/StationaryQubit/StationaryQubit_gate_error_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"MAKE_TERMERR":"/dev/ttys002","OMNETPP_RELEASE":"//omnetpp-6.0.1","__CFBundleIdentifier":"com.microsoft.VSCode","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","MAKEFLAGS":"w","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","MAKELEVEL":"2","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","_":"/opt/homebrew/bin/bear","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","LOGNAME":"kento","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","XPC_SERVICE_NAME":"0","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","USER_ZDOTDIR":"/Users/kento","HOMEBREW_REPOSITORY":"/opt/homebrew","OLDPWD":"/Users/kento/Develop/quisps","HOST":"MacbookSoon.local","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","XPC_FLAGS":"0x0","LSCOLORS":"Gxfxcxdxbxegedabagacad","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","SHLVL":"3","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","TERM_PROGRAM_VERSION":"1.73.1","PAGER":"less","HOME":"/Users/kento","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","COLORTERM":"truecolor","TERM":"xterm-256color","ZDOTDIR":"/Users/kento","PYTHONNOUSERSITE":"1","SHELL":"/bin/zsh","VSCODE_INJECTION":"1","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","MAKE_TERMOUT":"/dev/ttys002","HOMEBREW_PREFIX":"/opt/homebrew","LANG":"en_GB.UTF-8","COMMAND_MODE":"unix2003","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","PWD":"/Users/kento/Develop/quisps/quisp2","ZSH":"/Users/kento/.oh-my-zsh","LESS":"-R","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","MallocNanoZone":"0","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","dir":"","QT_SELECT":"5","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","_CE_CONDA":"","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","MFLAGS":"-w","USER":"kento","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","CONDA_SHLVL":"0","_CE_M":"","TERM_PROGRAM":"vscode","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock"}},"pid":57488,"ppid":57295},"timestamp":"2022-11-11T12:59:35.745453Z"}
{"rid":"8970849284528445073","terminated":{"status":"0"},"timestamp":"2022-11-11T12:59:45.610812Z"}
{"rid":"14003158828659611987","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit_internal_stabilizer_graph_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit_internal_stabilizer_graph_test.o","modules/QNIC/StationaryQubit/StationaryQubit_internal_stabilizer_graph_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","__CFBundleIdentifier":"com.microsoft.VSCode","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","HOME":"/Users/kento","LANG":"en_GB.UTF-8","MAKE_TERMERR":"/dev/ttys002","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","HOMEBREW_PREFIX":"/opt/homebrew","_CE_M":"","SHELL":"/bin/zsh","MAKEFLAGS":"w","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","CONDA_SHLVL":"0","MallocNanoZone":"0","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","VSCODE_INJECTION":"1","HOST":"MacbookSoon.local","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","TERM_PROGRAM_VERSION":"1.73.1","OLDPWD":"/Users/kento/Develop/quisps","LESS":"-R","OMNETPP_RELEASE":"//omnetpp-6.0.1","USER":"kento","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","PWD":"/Users/kento/Develop/quisps/quisp2","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","COLORTERM":"truecolor","_":"/opt/homebrew/bin/bear","MAKELEVEL":"2","LOGNAME":"kento","MFLAGS":"-w","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","USER_ZDOTDIR":"/Users/kento","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","XPC_SERVICE_NAME":"0","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","XPC_FLAGS":"0x0","SHLVL":"3","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","LSCOLORS":"Gxfxcxdxbxegedabagacad","ZSH":"/Users/kento/.oh-my-zsh","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","QT_SELECT":"5","COMMAND_MODE":"unix2003","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","dir":"","MAKE_TERMOUT":"/dev/ttys002","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","TERM_PROGRAM":"vscode","TERM":"xterm-256color","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","PAGER":"less","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","PYTHONNOUSERSITE":"1","HOMEBREW_REPOSITORY":"/opt/homebrew","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","_CE_CONDA":"","ZDOTDIR":"/Users/kento","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1"}},"pid":57507,"ppid":57295},"timestamp":"2022-11-11T12:59:45.767132Z"}
{"rid":"14003158828659611987","terminated":{"status":"0"},"timestamp":"2022-11-11T12:59:55.567493Z"}
{"rid":"8146220931523163146","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit_measurement_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit_measurement_test.o","modules/QNIC/StationaryQubit/StationaryQubit_measurement_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","_":"/opt/homebrew/bin/bear","QT_SELECT":"5","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","HOME":"/Users/kento","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","OMNETPP_RELEASE":"//omnetpp-6.0.1","TERM_PROGRAM":"vscode","VSCODE_INJECTION":"1","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","OLDPWD":"/Users/kento/Develop/quisps","HOST":"MacbookSoon.local","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","PWD":"/Users/kento/Develop/quisps/quisp2","USER":"kento","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","MFLAGS":"-w","MallocNanoZone":"0","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","ZSH":"/Users/kento/.oh-my-zsh","_CE_CONDA":"","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","TERM":"xterm-256color","SHELL":"/bin/zsh","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","CONDA_SHLVL":"0","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","MAKELEVEL":"2","HOMEBREW_PREFIX":"/opt/homebrew","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","TERM_PROGRAM_VERSION":"1.73.1","_CE_M":"","COMMAND_MODE":"unix2003","MAKE_TERMOUT":"/dev/ttys002","LESS":"-R","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","COLORTERM":"truecolor","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","__CFBundleIdentifier":"com.microsoft.VSCode","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","SHLVL":"3","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","LANG":"en_GB.UTF-8","PAGER":"less","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","dir":"","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","HOMEBREW_REPOSITORY":"/opt/homebrew","PYTHONNOUSERSITE":"1","MAKEFLAGS":"w","USER_ZDOTDIR":"/Users/kento","LOGNAME":"kento","ZDOTDIR":"/Users/kento","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","XPC_SERVICE_NAME":"0","MAKE_TERMERR":"/dev/ttys002","LSCOLORS":"Gxfxcxdxbxegedabagacad","XPC_FLAGS":"0x0"}},"pid":57526,"ppid":57295},"timestamp":"2022-11-11T12:59:55.723209Z"}
{"rid":"8146220931523163146","terminated":{"status":"0"},"timestamp":"2022-11-11T13:00:05.149888Z"}
{"rid":"11985026905996329910","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit_memory_error_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit_memory_error_test.o","modules/QNIC/StationaryQubit/StationaryQubit_memory_error_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","MAKEFLAGS":"w","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","OLDPWD":"/Users/kento/Develop/quisps","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","HOMEBREW_REPOSITORY":"/opt/homebrew","VSCODE_INJECTION":"1","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","__CFBundleIdentifier":"com.microsoft.VSCode","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","HOST":"MacbookSoon.local","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","LANG":"en_GB.UTF-8","MallocNanoZone":"0","_CE_M":"","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","USER":"kento","TERM_PROGRAM":"vscode","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","MAKE_TERMOUT":"/dev/ttys002","XPC_SERVICE_NAME":"0","USER_ZDOTDIR":"/Users/kento","COLORTERM":"truecolor","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","LESS":"-R","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","XPC_FLAGS":"0x0","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","ZSH":"/Users/kento/.oh-my-zsh","SHELL":"/bin/zsh","ZDOTDIR":"/Users/kento","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","PWD":"/Users/kento/Develop/quisps/quisp2","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","LOGNAME":"kento","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","COMMAND_MODE":"unix2003","QT_SELECT":"5","HOME":"/Users/kento","MAKE_TERMERR":"/dev/ttys002","CONDA_SHLVL":"0","MFLAGS":"-w","dir":"","MAKELEVEL":"2","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","PAGER":"less","OMNETPP_RELEASE":"//omnetpp-6.0.1","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","PYTHONNOUSERSITE":"1","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","SHLVL":"3","_CE_CONDA":"","_":"/opt/homebrew/bin/bear","TERM":"xterm-256color","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","HOMEBREW_PREFIX":"/opt/homebrew","TERM_PROGRAM_VERSION":"1.73.1","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","LSCOLORS":"Gxfxcxdxbxegedabagacad"}},"pid":57544,"ppid":57295},"timestamp":"2022-11-11T13:00:05.305741Z"}
{"rid":"11985026905996329910","terminated":{"status":"0"},"timestamp":"2022-11-11T13:00:14.489789Z"}
{"rid":"7392508713696286441","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QNIC/StationaryQubit/StationaryQubit_test.o","modules/QNIC/StationaryQubit/StationaryQubit_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","MAKELEVEL":"2","HOMEBREW_REPOSITORY":"/opt/homebrew","_":"/opt/homebrew/bin/bear","XPC_FLAGS":"0x0","LSCOLORS":"Gxfxcxdxbxegedabagacad","dir":"","TERM_PROGRAM_VERSION":"1.73.1","PAGER":"less","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","ZDOTDIR":"/Users/kento","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","ZSH":"/Users/kento/.oh-my-zsh","MAKE_TERMERR":"/dev/ttys002","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","VSCODE_INJECTION":"1","TERM":"xterm-256color","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","HOST":"MacbookSoon.local","QT_SELECT":"5","TERM_PROGRAM":"vscode","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","_CE_M":"","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","OLDPWD":"/Users/kento/Develop/quisps","OMNETPP_RELEASE":"//omnetpp-6.0.1","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","LESS":"-R","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","HOME":"/Users/kento","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","COLORTERM":"truecolor","LANG":"en_GB.UTF-8","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","MAKEFLAGS":"w","XPC_SERVICE_NAME":"0","PWD":"/Users/kento/Develop/quisps/quisp2","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","LOGNAME":"kento","PYTHONNOUSERSITE":"1","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","USER":"kento","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","SHELL":"/bin/zsh","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","MFLAGS":"-w","__CFBundleIdentifier":"com.microsoft.VSCode","_CE_CONDA":"","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","SHLVL":"3","MAKE_TERMOUT":"/dev/ttys002","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","COMMAND_MODE":"unix2003","CONDA_SHLVL":"0","USER_ZDOTDIR":"/Users/kento","HOMEBREW_PREFIX":"/opt/homebrew","MallocNanoZone":"0","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/"}},"pid":57562,"ppid":57295},"timestamp":"2022-11-11T13:00:14.642683Z"}
{"rid":"7392508713696286441","terminated":{"status":"0"},"timestamp":"2022-11-11T13:00:24.186531Z"}
{"rid":"1471518578251162807","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/ConnectionManager/ConnectionManager_ruleset_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/ConnectionManager/ConnectionManager_ruleset_test.o","modules/QRSA/ConnectionManager/ConnectionManager_ruleset_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","COLORTERM":"truecolor","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","MAKELEVEL":"2","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","CONDA_SHLVL":"0","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","MAKE_TERMERR":"/dev/ttys002","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","SHLVL":"3","PAGER":"less","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","ZDOTDIR":"/Users/kento","VSCODE_INJECTION":"1","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","HOMEBREW_REPOSITORY":"/opt/homebrew","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","OLDPWD":"/Users/kento/Develop/quisps","MAKEFLAGS":"w","_CE_CONDA":"","PYTHONNOUSERSITE":"1","XPC_SERVICE_NAME":"0","HOMEBREW_PREFIX":"/opt/homebrew","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","LSCOLORS":"Gxfxcxdxbxegedabagacad","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","TERM_PROGRAM_VERSION":"1.73.1","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","LESS":"-R","LOGNAME":"kento","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","MallocNanoZone":"0","SHELL":"/bin/zsh","QT_SELECT":"5","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","PWD":"/Users/kento/Develop/quisps/quisp2","HOME":"/Users/kento","HOST":"MacbookSoon.local","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","MAKE_TERMOUT":"/dev/ttys002","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","__CFBundleIdentifier":"com.microsoft.VSCode","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","XPC_FLAGS":"0x0","USER_ZDOTDIR":"/Users/kento","TERM_PROGRAM":"vscode","dir":"","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","_CE_M":"","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","TERM":"xterm-256color","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","LANG":"en_GB.UTF-8","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","MFLAGS":"-w","COMMAND_MODE":"unix2003","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","USER":"kento","ZSH":"/Users/kento/.oh-my-zsh","_":"/opt/homebrew/bin/bear","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","OMNETPP_RELEASE":"//omnetpp-6.0.1","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2"}},"pid":57580,"ppid":57295},"timestamp":"2022-11-11T13:00:24.340273Z"}
{"rid":"1471518578251162807","terminated":{"status":"0"},"timestamp":"2022-11-11T13:00:34.255647Z"}
{"rid":"1793404880306269146","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/ConnectionManager/ConnectionManager_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/ConnectionManager/ConnectionManager_test.o","modules/QRSA/ConnectionManager/ConnectionManager_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HOMEBREW_REPOSITORY":"/opt/homebrew","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","LSCOLORS":"Gxfxcxdxbxegedabagacad","ZDOTDIR":"/Users/kento","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","SHLVL":"3","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","MallocNanoZone":"0","PYTHONNOUSERSITE":"1","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","OLDPWD":"/Users/kento/Develop/quisps","TERM_PROGRAM":"vscode","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","HOME":"/Users/kento","USER":"kento","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","QT_SELECT":"5","COMMAND_MODE":"unix2003","_CE_M":"","USER_ZDOTDIR":"/Users/kento","VSCODE_INJECTION":"1","dir":"","XPC_SERVICE_NAME":"0","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","MFLAGS":"-w","XPC_FLAGS":"0x0","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","HOMEBREW_PREFIX":"/opt/homebrew","MAKE_TERMOUT":"/dev/ttys002","HOST":"MacbookSoon.local","SHELL":"/bin/zsh","TERM_PROGRAM_VERSION":"1.73.1","PAGER":"less","LOGNAME":"kento","__CFBundleIdentifier":"com.microsoft.VSCode","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","MAKEFLAGS":"w","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","LANG":"en_GB.UTF-8","LESS":"-R","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","PWD":"/Users/kento/Develop/quisps/quisp2","MAKE_TERMERR":"/dev/ttys002","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","_":"/opt/homebrew/bin/bear","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","ZSH":"/Users/kento/.oh-my-zsh","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","MAKELEVEL":"2","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","CONDA_SHLVL":"0","_CE_CONDA":"","COLORTERM":"truecolor","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","OMNETPP_RELEASE":"//omnetpp-6.0.1","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","TERM":"xterm-256color"}},"pid":57600,"ppid":57295},"timestamp":"2022-11-11T13:00:34.414046Z"}
{"rid":"1793404880306269146","terminated":{"status":"0"},"timestamp":"2022-11-11T13:00:46.177274Z"}
{"rid":"5306812431613885583","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/HardwareMonitor/HardwareMonitor_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/HardwareMonitor/HardwareMonitor_test.o","modules/QRSA/HardwareMonitor/HardwareMonitor_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","MFLAGS":"-w","LANG":"en_GB.UTF-8","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","OLDPWD":"/Users/kento/Develop/quisps","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","_CE_M":"","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HOMEBREW_REPOSITORY":"/opt/homebrew","PYTHONNOUSERSITE":"1","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","ZDOTDIR":"/Users/kento","COMMAND_MODE":"unix2003","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","HOST":"MacbookSoon.local","LESS":"-R","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","COLORTERM":"truecolor","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","XPC_SERVICE_NAME":"0","LSCOLORS":"Gxfxcxdxbxegedabagacad","SHELL":"/bin/zsh","USER":"kento","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","CONDA_SHLVL":"0","TERM_PROGRAM_VERSION":"1.73.1","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","OMNETPP_RELEASE":"//omnetpp-6.0.1","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","USER_ZDOTDIR":"/Users/kento","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","TERM_PROGRAM":"vscode","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HOMEBREW_PREFIX":"/opt/homebrew","__CFBundleIdentifier":"com.microsoft.VSCode","dir":"","MAKE_TERMOUT":"/dev/ttys002","QT_SELECT":"5","XPC_FLAGS":"0x0","ZSH":"/Users/kento/.oh-my-zsh","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","MAKEFLAGS":"w","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","VSCODE_INJECTION":"1","_CE_CONDA":"","MallocNanoZone":"0","PWD":"/Users/kento/Develop/quisps/quisp2","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","SHLVL":"3","MAKE_TERMERR":"/dev/ttys002","PAGER":"less","MAKELEVEL":"2","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","_":"/opt/homebrew/bin/bear","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","LOGNAME":"kento","TERM":"xterm-256color","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","HOME":"/Users/kento"}},"pid":57618,"ppid":57295},"timestamp":"2022-11-11T13:00:46.333802Z"}
{"rid":"5306812431613885583","terminated":{"status":"0"},"timestamp":"2022-11-11T13:00:56.906419Z"}
{"rid":"13324691568737409006","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/RealTimeController/RealTimeController_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/RealTimeController/RealTimeController_test.o","modules/QRSA/RealTimeController/RealTimeController_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"TERM":"xterm-256color","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","OMNETPP_RELEASE":"//omnetpp-6.0.1","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","HOME":"/Users/kento","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","VSCODE_INJECTION":"1","USER":"kento","MFLAGS":"-w","USER_ZDOTDIR":"/Users/kento","TERM_PROGRAM":"vscode","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HOMEBREW_REPOSITORY":"/opt/homebrew","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","__CFBundleIdentifier":"com.microsoft.VSCode","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","HOST":"MacbookSoon.local","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","ZSH":"/Users/kento/.oh-my-zsh","LOGNAME":"kento","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","SHELL":"/bin/zsh","MallocNanoZone":"0","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","CONDA_SHLVL":"0","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","QT_SELECT":"5","XPC_SERVICE_NAME":"0","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","XPC_FLAGS":"0x0","LSCOLORS":"Gxfxcxdxbxegedabagacad","MAKE_TERMOUT":"/dev/ttys002","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","_CE_CONDA":"","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","SHLVL":"3","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","MAKE_TERMERR":"/dev/ttys002","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","COMMAND_MODE":"unix2003","PAGER":"less","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","_CE_M":"","LESS":"-R","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","ZDOTDIR":"/Users/kento","PWD":"/Users/kento/Develop/quisps/quisp2","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","dir":"","TERM_PROGRAM_VERSION":"1.73.1","_":"/opt/homebrew/bin/bear","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","MAKELEVEL":"2","OLDPWD":"/Users/kento/Develop/quisps","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","PYTHONNOUSERSITE":"1","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","HOMEBREW_PREFIX":"/opt/homebrew","MAKEFLAGS":"w","COLORTERM":"truecolor","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","LANG":"en_GB.UTF-8"}},"pid":57640,"ppid":57295},"timestamp":"2022-11-11T13:00:57.071043Z"}
{"rid":"13324691568737409006","terminated":{"status":"0"},"timestamp":"2022-11-11T13:01:07.228815Z"}
{"rid":"17515898468308159404","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/RoutingDaemon/RoutingDaemon_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/RoutingDaemon/RoutingDaemon_test.o","modules/QRSA/RoutingDaemon/RoutingDaemon_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","MallocNanoZone":"0","LSCOLORS":"Gxfxcxdxbxegedabagacad","_":"/opt/homebrew/bin/bear","MAKEFLAGS":"w","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","XPC_SERVICE_NAME":"0","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","TERM_PROGRAM":"vscode","MFLAGS":"-w","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","__CFBundleIdentifier":"com.microsoft.VSCode","SHLVL":"3","PYTHONNOUSERSITE":"1","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","PWD":"/Users/kento/Develop/quisps/quisp2","COMMAND_MODE":"unix2003","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","HOMEBREW_REPOSITORY":"/opt/homebrew","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","dir":"","TERM_PROGRAM_VERSION":"1.73.1","MAKE_TERMERR":"/dev/ttys002","ZSH":"/Users/kento/.oh-my-zsh","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","VSCODE_INJECTION":"1","QT_SELECT":"5","MAKELEVEL":"2","LOGNAME":"kento","LANG":"en_GB.UTF-8","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HOME":"/Users/kento","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","COLORTERM":"truecolor","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","CONDA_SHLVL":"0","XPC_FLAGS":"0x0","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","LESS":"-R","MAKE_TERMOUT":"/dev/ttys002","_CE_M":"","HOMEBREW_PREFIX":"/opt/homebrew","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","OLDPWD":"/Users/kento/Develop/quisps","USER_ZDOTDIR":"/Users/kento","USER":"kento","HOST":"MacbookSoon.local","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","PAGER":"less","OMNETPP_RELEASE":"//omnetpp-6.0.1","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","_CE_CONDA":"","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","SHELL":"/bin/zsh","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","ZDOTDIR":"/Users/kento","TERM":"xterm-256color"}},"pid":57663,"ppid":57295},"timestamp":"2022-11-11T13:01:07.383552Z"}
{"rid":"17515898468308159404","terminated":{"status":"0"},"timestamp":"2022-11-11T13:01:15.293625Z"}
{"rid":"7554762418002818170","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/RuleEngine/BellPairStore/BellPairStore_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/RuleEngine/BellPairStore/BellPairStore_test.o","modules/QRSA/RuleEngine/BellPairStore/BellPairStore_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","MAKE_TERMERR":"/dev/ttys002","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","TERM_PROGRAM_VERSION":"1.73.1","PAGER":"less","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","PWD":"/Users/kento/Develop/quisps/quisp2","OLDPWD":"/Users/kento/Develop/quisps","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","COMMAND_MODE":"unix2003","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","ZDOTDIR":"/Users/kento","LOGNAME":"kento","HOMEBREW_REPOSITORY":"/opt/homebrew","LSCOLORS":"Gxfxcxdxbxegedabagacad","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","_CE_M":"","TERM_PROGRAM":"vscode","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","ZSH":"/Users/kento/.oh-my-zsh","CONDA_SHLVL":"0","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","HOMEBREW_PREFIX":"/opt/homebrew","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","MAKE_TERMOUT":"/dev/ttys002","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","HOME":"/Users/kento","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","_":"/opt/homebrew/bin/bear","QT_SELECT":"5","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","__CFBundleIdentifier":"com.microsoft.VSCode","OMNETPP_RELEASE":"//omnetpp-6.0.1","MFLAGS":"-w","MAKELEVEL":"2","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","MAKEFLAGS":"w","dir":"","VSCODE_INJECTION":"1","USER_ZDOTDIR":"/Users/kento","COLORTERM":"truecolor","USER":"kento","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","HOST":"MacbookSoon.local","SHLVL":"3","TERM":"xterm-256color","XPC_FLAGS":"0x0","SHELL":"/bin/zsh","LANG":"en_GB.UTF-8","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","MallocNanoZone":"0","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","_CE_CONDA":"","LESS":"-R","XPC_SERVICE_NAME":"0","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","PYTHONNOUSERSITE":"1","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library"}},"pid":57679,"ppid":57295},"timestamp":"2022-11-11T13:01:15.448356Z"}
{"rid":"7554762418002818170","terminated":{"status":"0"},"timestamp":"2022-11-11T13:01:24.025666Z"}
{"rid":"17504177978675476512","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/RuleEngine/QNicRecord/QNicRocord_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/RuleEngine/QNicRecord/QNicRocord_test.o","modules/QRSA/RuleEngine/QNicRecord/QNicRocord_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"_":"/opt/homebrew/bin/bear","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","SHELL":"/bin/zsh","TERM_PROGRAM":"vscode","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","TERM_PROGRAM_VERSION":"1.73.1","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","dir":"","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","QT_SELECT":"5","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","PAGER":"less","CONDA_SHLVL":"0","_CE_CONDA":"","MAKE_TERMERR":"/dev/ttys002","XPC_FLAGS":"0x0","HOMEBREW_REPOSITORY":"/opt/homebrew","TERM":"xterm-256color","MAKELEVEL":"2","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","ZDOTDIR":"/Users/kento","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","MFLAGS":"-w","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","COLORTERM":"truecolor","SHLVL":"3","HOST":"MacbookSoon.local","PYTHONNOUSERSITE":"1","_CE_M":"","PWD":"/Users/kento/Develop/quisps/quisp2","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","MAKEFLAGS":"w","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","LANG":"en_GB.UTF-8","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","ZSH":"/Users/kento/.oh-my-zsh","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","LESS":"-R","OMNETPP_RELEASE":"//omnetpp-6.0.1","__CFBundleIdentifier":"com.microsoft.VSCode","LSCOLORS":"Gxfxcxdxbxegedabagacad","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","HOME":"/Users/kento","MAKE_TERMOUT":"/dev/ttys002","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","MallocNanoZone":"0","VSCODE_INJECTION":"1","LOGNAME":"kento","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","USER_ZDOTDIR":"/Users/kento","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","USER":"kento","OLDPWD":"/Users/kento/Develop/quisps","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","XPC_SERVICE_NAME":"0","COMMAND_MODE":"unix2003","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","HOMEBREW_PREFIX":"/opt/homebrew"}},"pid":57726,"ppid":57295},"timestamp":"2022-11-11T13:01:24.300152Z"}
{"rid":"17504177978675476512","terminated":{"status":"0"},"timestamp":"2022-11-11T13:01:32.896462Z"}
{"rid":"14319998489310185812","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/RuleEngine/QNicStore/QNicStore_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/RuleEngine/QNicStore/QNicStore_test.o","modules/QRSA/RuleEngine/QNicStore/QNicStore_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"TERM_PROGRAM":"vscode","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HOME":"/Users/kento","ZDOTDIR":"/Users/kento","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","_":"/opt/homebrew/bin/bear","MAKE_TERMOUT":"/dev/ttys002","ZSH":"/Users/kento/.oh-my-zsh","SHLVL":"3","USER":"kento","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","CONDA_SHLVL":"0","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","XPC_FLAGS":"0x0","MAKELEVEL":"2","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","MAKE_TERMERR":"/dev/ttys002","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","COLORTERM":"truecolor","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","PYTHONNOUSERSITE":"1","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","XPC_SERVICE_NAME":"0","SHELL":"/bin/zsh","COMMAND_MODE":"unix2003","LANG":"en_GB.UTF-8","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","VSCODE_INJECTION":"1","QT_SELECT":"5","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","OMNETPP_RELEASE":"//omnetpp-6.0.1","MFLAGS":"-w","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","OLDPWD":"/Users/kento/Develop/quisps","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","PWD":"/Users/kento/Develop/quisps/quisp2","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","LOGNAME":"kento","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","LESS":"-R","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HOMEBREW_PREFIX":"/opt/homebrew","_CE_M":"","LSCOLORS":"Gxfxcxdxbxegedabagacad","TERM_PROGRAM_VERSION":"1.73.1","dir":"","USER_ZDOTDIR":"/Users/kento","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","HOST":"MacbookSoon.local","PAGER":"less","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","MAKEFLAGS":"w","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","__CFBundleIdentifier":"com.microsoft.VSCode","HOMEBREW_REPOSITORY":"/opt/homebrew","_CE_CONDA":"","TERM":"xterm-256color","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","MallocNanoZone":"0","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2"}},"pid":57833,"ppid":57295},"timestamp":"2022-11-11T13:01:33.057301Z"}
{"rid":"14319998489310185812","terminated":{"status":"0"},"timestamp":"2022-11-11T13:01:42.135771Z"}
{"rid":"8521748511475979013","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/RuleEngine/QubitRecord/QubitRecord_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/RuleEngine/QubitRecord/QubitRecord_test.o","modules/QRSA/RuleEngine/QubitRecord/QubitRecord_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","LOGNAME":"kento","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","MFLAGS":"-w","ZSH":"/Users/kento/.oh-my-zsh","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","LESS":"-R","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","TERM_PROGRAM_VERSION":"1.73.1","SHLVL":"3","OMNETPP_RELEASE":"//omnetpp-6.0.1","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","XPC_SERVICE_NAME":"0","MAKE_TERMOUT":"/dev/ttys002","MallocNanoZone":"0","_CE_CONDA":"","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","QT_SELECT":"5","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","USER":"kento","LSCOLORS":"Gxfxcxdxbxegedabagacad","SHELL":"/bin/zsh","PWD":"/Users/kento/Develop/quisps/quisp2","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","PAGER":"less","XPC_FLAGS":"0x0","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","OLDPWD":"/Users/kento/Develop/quisps","LANG":"en_GB.UTF-8","MAKEFLAGS":"w","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","USER_ZDOTDIR":"/Users/kento","VSCODE_INJECTION":"1","HOST":"MacbookSoon.local","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","dir":"","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","_CE_M":"","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","CONDA_SHLVL":"0","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","COLORTERM":"truecolor","_":"/opt/homebrew/bin/bear","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","MAKE_TERMERR":"/dev/ttys002","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","HOME":"/Users/kento","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","MAKELEVEL":"2","TERM_PROGRAM":"vscode","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","PYTHONNOUSERSITE":"1","ZDOTDIR":"/Users/kento","TERM":"xterm-256color","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","COMMAND_MODE":"unix2003","__CFBundleIdentifier":"com.microsoft.VSCode","HOMEBREW_REPOSITORY":"/opt/homebrew","HOMEBREW_PREFIX":"/opt/homebrew"}},"pid":58021,"ppid":57295},"timestamp":"2022-11-11T13:01:42.303548Z"}
{"rid":"8521748511475979013","terminated":{"status":"0"},"timestamp":"2022-11-11T13:01:50.698084Z"}
{"rid":"4531158769988253315","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/RuleEngine/RuleEngine_photon_shooting_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/RuleEngine/RuleEngine_photon_shooting_test.o","modules/QRSA/RuleEngine/RuleEngine_photon_shooting_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"PYTHONNOUSERSITE":"1","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","TERM_PROGRAM_VERSION":"1.73.1","LANG":"en_GB.UTF-8","XPC_SERVICE_NAME":"0","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","PAGER":"less","HOMEBREW_PREFIX":"/opt/homebrew","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","CONDA_SHLVL":"0","ZSH":"/Users/kento/.oh-my-zsh","MAKELEVEL":"2","TERM":"xterm-256color","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","COMMAND_MODE":"unix2003","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","XPC_FLAGS":"0x0","PWD":"/Users/kento/Develop/quisps/quisp2","COLORTERM":"truecolor","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","OMNETPP_RELEASE":"//omnetpp-6.0.1","MFLAGS":"-w","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","USER":"kento","VSCODE_INJECTION":"1","OLDPWD":"/Users/kento/Develop/quisps","HOST":"MacbookSoon.local","LOGNAME":"kento","MAKE_TERMOUT":"/dev/ttys002","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","dir":"","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","QT_SELECT":"5","SHLVL":"3","HOMEBREW_REPOSITORY":"/opt/homebrew","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","__CFBundleIdentifier":"com.microsoft.VSCode","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","MAKEFLAGS":"w","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","_CE_M":"","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","ZDOTDIR":"/Users/kento","USER_ZDOTDIR":"/Users/kento","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","TERM_PROGRAM":"vscode","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","_CE_CONDA":"","SHELL":"/bin/zsh","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","LESS":"-R","_":"/opt/homebrew/bin/bear","MAKE_TERMERR":"/dev/ttys002","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","HOME":"/Users/kento","LSCOLORS":"Gxfxcxdxbxegedabagacad","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","MallocNanoZone":"0"}},"pid":58085,"ppid":57295},"timestamp":"2022-11-11T13:01:50.856953Z"}
{"rid":"4531158769988253315","terminated":{"status":"0"},"timestamp":"2022-11-11T13:02:01.987758Z"}
{"rid":"17911842616363151308","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/RuleEngine/RuleEngine_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/RuleEngine/RuleEngine_test.o","modules/QRSA/RuleEngine/RuleEngine_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"_CE_CONDA":"","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","LESS":"-R","HOME":"/Users/kento","MAKE_TERMOUT":"/dev/ttys002","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","QT_SELECT":"5","HOST":"MacbookSoon.local","USER":"kento","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","MAKE_TERMERR":"/dev/ttys002","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","MAKELEVEL":"2","PWD":"/Users/kento/Develop/quisps/quisp2","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","SHLVL":"3","LSCOLORS":"Gxfxcxdxbxegedabagacad","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","__CFBundleIdentifier":"com.microsoft.VSCode","TERM_PROGRAM":"vscode","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","ZDOTDIR":"/Users/kento","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","ZSH":"/Users/kento/.oh-my-zsh","CONDA_SHLVL":"0","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","XPC_FLAGS":"0x0","USER_ZDOTDIR":"/Users/kento","HOMEBREW_REPOSITORY":"/opt/homebrew","SHELL":"/bin/zsh","dir":"","OMNETPP_RELEASE":"//omnetpp-6.0.1","XPC_SERVICE_NAME":"0","_CE_M":"","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","PYTHONNOUSERSITE":"1","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","MallocNanoZone":"0","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","LOGNAME":"kento","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","COLORTERM":"truecolor","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","TERM_PROGRAM_VERSION":"1.73.1","VSCODE_INJECTION":"1","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","MFLAGS":"-w","_":"/opt/homebrew/bin/bear","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","OLDPWD":"/Users/kento/Develop/quisps","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","LANG":"en_GB.UTF-8","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","MAKEFLAGS":"w","COMMAND_MODE":"unix2003","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","PAGER":"less","HOMEBREW_PREFIX":"/opt/homebrew","TERM":"xterm-256color"}},"pid":58184,"ppid":57295},"timestamp":"2022-11-11T13:02:02.142122Z"}
{"rid":"17911842616363151308","terminated":{"status":"0"},"timestamp":"2022-11-11T13:02:19.244459Z"}
{"rid":"16332712999755871999","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//modules/QRSA/RuleEngine/RuleSetStore/RuleSetStore_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//modules/QRSA/RuleEngine/RuleSetStore/RuleSetStore_test.o","modules/QRSA/RuleEngine/RuleSetStore/RuleSetStore_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"XPC_FLAGS":"0x0","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","CONDA_SHLVL":"0","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","ZSH":"/Users/kento/.oh-my-zsh","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","_CE_M":"","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","QT_SELECT":"5","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","LESS":"-R","__CFBundleIdentifier":"com.microsoft.VSCode","MAKE_TERMOUT":"/dev/ttys002","PYTHONNOUSERSITE":"1","MAKE_TERMERR":"/dev/ttys002","HOMEBREW_REPOSITORY":"/opt/homebrew","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","USER":"kento","HOMEBREW_PREFIX":"/opt/homebrew","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","HOME":"/Users/kento","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","TERM_PROGRAM":"vscode","HOST":"MacbookSoon.local","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","OLDPWD":"/Users/kento/Develop/quisps","PWD":"/Users/kento/Develop/quisps/quisp2","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","VSCODE_INJECTION":"1","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","OMNETPP_RELEASE":"//omnetpp-6.0.1","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","SHELL":"/bin/zsh","PAGER":"less","LOGNAME":"kento","MAKEFLAGS":"w","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","LANG":"en_GB.UTF-8","USER_ZDOTDIR":"/Users/kento","TERM":"xterm-256color","_CE_CONDA":"","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","TERM_PROGRAM_VERSION":"1.73.1","XPC_SERVICE_NAME":"0","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","MAKELEVEL":"2","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","dir":"","COLORTERM":"truecolor","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","LSCOLORS":"Gxfxcxdxbxegedabagacad","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","MallocNanoZone":"0","ZDOTDIR":"/Users/kento","COMMAND_MODE":"unix2003","_":"/opt/homebrew/bin/bear","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","MFLAGS":"-w","SHLVL":"3"}},"pid":58264,"ppid":57295},"timestamp":"2022-11-11T13:02:19.398621Z"}
{"rid":"16332712999755871999","terminated":{"status":"0"},"timestamp":"2022-11-11T13:02:27.929759Z"}
{"rid":"11813781722082708029","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Action_serialize_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//rules/Action_serialize_test.o","rules/Action_serialize_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"MallocNanoZone":"0","PYTHONNOUSERSITE":"1","SHLVL":"3","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","_CE_M":"","COLORTERM":"truecolor","dir":"","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","CONDA_SHLVL":"0","ZDOTDIR":"/Users/kento","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","TERM":"xterm-256color","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","HOME":"/Users/kento","__CFBundleIdentifier":"com.microsoft.VSCode","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","VSCODE_INJECTION":"1","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","MAKELEVEL":"2","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","TERM_PROGRAM":"vscode","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","_":"/opt/homebrew/bin/bear","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","LSCOLORS":"Gxfxcxdxbxegedabagacad","LESS":"-R","OLDPWD":"/Users/kento/Develop/quisps","LANG":"en_GB.UTF-8","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","MAKE_TERMOUT":"/dev/ttys002","USER":"kento","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","_CE_CONDA":"","COMMAND_MODE":"unix2003","XPC_FLAGS":"0x0","SHELL":"/bin/zsh","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","ZSH":"/Users/kento/.oh-my-zsh","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","XPC_SERVICE_NAME":"0","HOST":"MacbookSoon.local","LOGNAME":"kento","HOMEBREW_PREFIX":"/opt/homebrew","MFLAGS":"-w","PWD":"/Users/kento/Develop/quisps/quisp2","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","TERM_PROGRAM_VERSION":"1.73.1","QT_SELECT":"5","PAGER":"less","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","HOMEBREW_REPOSITORY":"/opt/homebrew","MAKE_TERMERR":"/dev/ttys002","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","MAKEFLAGS":"w","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","OMNETPP_RELEASE":"//omnetpp-6.0.1","USER_ZDOTDIR":"/Users/kento","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda"}},"pid":58366,"ppid":57295},"timestamp":"2022-11-11T13:02:28.082424Z"}
{"rid":"11813781722082708029","terminated":{"status":"0"},"timestamp":"2022-11-11T13:02:38.254160Z"}
{"rid":"983333002840773392","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Active/ActiveRuleSet_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//rules/Active/ActiveRuleSet_test.o","rules/Active/ActiveRuleSet_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","TERM_PROGRAM":"vscode","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","PWD":"/Users/kento/Develop/quisps/quisp2","MallocNanoZone":"0","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","SHLVL":"3","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","XPC_SERVICE_NAME":"0","CONDA_SHLVL":"0","TERM_PROGRAM_VERSION":"1.73.1","PAGER":"less","HOMEBREW_REPOSITORY":"/opt/homebrew","USER":"kento","MAKE_TERMOUT":"/dev/ttys002","VSCODE_INJECTION":"1","MAKELEVEL":"2","dir":"","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","QT_SELECT":"5","ZDOTDIR":"/Users/kento","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","LOGNAME":"kento","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","__CFBundleIdentifier":"com.microsoft.VSCode","_CE_M":"","LANG":"en_GB.UTF-8","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","OLDPWD":"/Users/kento/Develop/quisps","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","HOST":"MacbookSoon.local","HOME":"/Users/kento","MAKEFLAGS":"w","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","OMNETPP_RELEASE":"//omnetpp-6.0.1","PYTHONNOUSERSITE":"1","XPC_FLAGS":"0x0","COLORTERM":"truecolor","HOMEBREW_PREFIX":"/opt/homebrew","_":"/opt/homebrew/bin/bear","TERM":"xterm-256color","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","COMMAND_MODE":"unix2003","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","ZSH":"/Users/kento/.oh-my-zsh","SHELL":"/bin/zsh","MAKE_TERMERR":"/dev/ttys002","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","LESS":"-R","MFLAGS":"-w","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","_CE_CONDA":"","USER_ZDOTDIR":"/Users/kento","LSCOLORS":"Gxfxcxdxbxegedabagacad"}},"pid":58426,"ppid":57295},"timestamp":"2022-11-11T13:02:38.414635Z"}
{"rid":"983333002840773392","terminated":{"status":"0"},"timestamp":"2022-11-11T13:02:46.869839Z"}
{"rid":"774136100124426137","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Active/ActiveRule_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//rules/Active/ActiveRule_test.o","rules/Active/ActiveRule_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","USER":"kento","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","__CFBundleIdentifier":"com.microsoft.VSCode","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","MAKEFLAGS":"w","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","MallocNanoZone":"0","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","MAKE_TERMOUT":"/dev/ttys002","PAGER":"less","COMMAND_MODE":"unix2003","dir":"","SHLVL":"3","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","SHELL":"/bin/zsh","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","LESS":"-R","XPC_SERVICE_NAME":"0","TERM":"xterm-256color","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","_CE_M":"","HOST":"MacbookSoon.local","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","COLORTERM":"truecolor","LANG":"en_GB.UTF-8","VSCODE_INJECTION":"1","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","OLDPWD":"/Users/kento/Develop/quisps","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","_":"/opt/homebrew/bin/bear","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","PWD":"/Users/kento/Develop/quisps/quisp2","QT_SELECT":"5","MAKE_TERMERR":"/dev/ttys002","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HOME":"/Users/kento","ZSH":"/Users/kento/.oh-my-zsh","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","TERM_PROGRAM_VERSION":"1.73.1","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","TERM_PROGRAM":"vscode","MFLAGS":"-w","_CE_CONDA":"","CONDA_SHLVL":"0","HOMEBREW_PREFIX":"/opt/homebrew","LSCOLORS":"Gxfxcxdxbxegedabagacad","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","USER_ZDOTDIR":"/Users/kento","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","MAKELEVEL":"2","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","LOGNAME":"kento","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","HOMEBREW_REPOSITORY":"/opt/homebrew","ZDOTDIR":"/Users/kento","PYTHONNOUSERSITE":"1","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","XPC_FLAGS":"0x0","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","OMNETPP_RELEASE":"//omnetpp-6.0.1"}},"pid":58645,"ppid":57295},"timestamp":"2022-11-11T13:02:47.029091Z"}
{"rid":"774136100124426137","terminated":{"status":"0"},"timestamp":"2022-11-11T13:02:56.925905Z"}
{"rid":"10487461563418032397","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Active/actions/DoublePurifyActionInv_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//rules/Active/actions/DoublePurifyActionInv_test.o","rules/Active/actions/DoublePurifyActionInv_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"MAKE_TERMERR":"/dev/ttys002","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","MFLAGS":"-w","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","ZSH":"/Users/kento/.oh-my-zsh","MallocNanoZone":"0","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","PWD":"/Users/kento/Develop/quisps/quisp2","SHELL":"/bin/zsh","PAGER":"less","SHLVL":"3","COLORTERM":"truecolor","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","ZDOTDIR":"/Users/kento","MAKE_TERMOUT":"/dev/ttys002","MAKEFLAGS":"w","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","OMNETPP_RELEASE":"//omnetpp-6.0.1","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","USER_ZDOTDIR":"/Users/kento","TERM_PROGRAM_VERSION":"1.73.1","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","QT_SELECT":"5","COMMAND_MODE":"unix2003","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","LANG":"en_GB.UTF-8","__CFBundleIdentifier":"com.microsoft.VSCode","OLDPWD":"/Users/kento/Develop/quisps","HOMEBREW_PREFIX":"/opt/homebrew","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","LOGNAME":"kento","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","HOME":"/Users/kento","LSCOLORS":"Gxfxcxdxbxegedabagacad","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","_CE_M":"","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","TERM_PROGRAM":"vscode","HOST":"MacbookSoon.local","XPC_FLAGS":"0x0","LESS":"-R","CONDA_SHLVL":"0","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","_CE_CONDA":"","_":"/opt/homebrew/bin/bear","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","TERM":"xterm-256color","MAKELEVEL":"2","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","USER":"kento","VSCODE_INJECTION":"1","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","dir":"","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","HOMEBREW_REPOSITORY":"/opt/homebrew","XPC_SERVICE_NAME":"0","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","PYTHONNOUSERSITE":"1"}},"pid":58706,"ppid":57295},"timestamp":"2022-11-11T13:02:57.079647Z"}
{"rid":"10487461563418032397","terminated":{"status":"0"},"timestamp":"2022-11-11T13:03:09.923682Z"}
{"rid":"18248999055414387719","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Active/actions/DoublePurifyAction_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//rules/Active/actions/DoublePurifyAction_test.o","rules/Active/actions/DoublePurifyAction_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"MAKELEVEL":"2","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","XPC_SERVICE_NAME":"0","CONDA_SHLVL":"0","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","MAKEFLAGS":"w","TERM_PROGRAM":"vscode","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","VSCODE_INJECTION":"1","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","_CE_M":"","PYTHONNOUSERSITE":"1","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","LSCOLORS":"Gxfxcxdxbxegedabagacad","XPC_FLAGS":"0x0","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","SHLVL":"3","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","LANG":"en_GB.UTF-8","OMNETPP_RELEASE":"//omnetpp-6.0.1","TERM":"xterm-256color","MAKE_TERMOUT":"/dev/ttys002","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","QT_SELECT":"5","COMMAND_MODE":"unix2003","MallocNanoZone":"0","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","_":"/opt/homebrew/bin/bear","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","ZDOTDIR":"/Users/kento","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","HOME":"/Users/kento","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","HOST":"MacbookSoon.local","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","MFLAGS":"-w","ZSH":"/Users/kento/.oh-my-zsh","OLDPWD":"/Users/kento/Develop/quisps","MAKE_TERMERR":"/dev/ttys002","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","HOMEBREW_REPOSITORY":"/opt/homebrew","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","dir":"","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","LOGNAME":"kento","SHELL":"/bin/zsh","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","PAGER":"less","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","USER":"kento","PWD":"/Users/kento/Develop/quisps/quisp2","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","TERM_PROGRAM_VERSION":"1.73.1","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","LESS":"-R","HOMEBREW_PREFIX":"/opt/homebrew","USER_ZDOTDIR":"/Users/kento","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","_CE_CONDA":"","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","COLORTERM":"truecolor","__CFBundleIdentifier":"com.microsoft.VSCode"}},"pid":58735,"ppid":57295},"timestamp":"2022-11-11T13:03:10.078354Z"}
{"rid":"18248999055414387719","terminated":{"status":"0"},"timestamp":"2022-11-11T13:03:22.775114Z"}
{"rid":"4541635485809777123","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Active/actions/DoubleSelectionActionInv_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//rules/Active/actions/DoubleSelectionActionInv_test.o","rules/Active/actions/DoubleSelectionActionInv_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","MFLAGS":"-w","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","LSCOLORS":"Gxfxcxdxbxegedabagacad","COMMAND_MODE":"unix2003","HOME":"/Users/kento","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","TERM":"xterm-256color","_":"/opt/homebrew/bin/bear","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","MallocNanoZone":"0","_CE_CONDA":"","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","LANG":"en_GB.UTF-8","USER_ZDOTDIR":"/Users/kento","MAKE_TERMOUT":"/dev/ttys002","SHLVL":"3","__CFBundleIdentifier":"com.microsoft.VSCode","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","COLORTERM":"truecolor","USER":"kento","XPC_FLAGS":"0x0","TERM_PROGRAM_VERSION":"1.73.1","MAKELEVEL":"2","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","PWD":"/Users/kento/Develop/quisps/quisp2","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","QT_SELECT":"5","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","OLDPWD":"/Users/kento/Develop/quisps","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","SHELL":"/bin/zsh","HOMEBREW_REPOSITORY":"/opt/homebrew","HOMEBREW_PREFIX":"/opt/homebrew","XPC_SERVICE_NAME":"0","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","TERM_PROGRAM":"vscode","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","ZSH":"/Users/kento/.oh-my-zsh","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","PYTHONNOUSERSITE":"1","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","OMNETPP_RELEASE":"//omnetpp-6.0.1","MAKEFLAGS":"w","MAKE_TERMERR":"/dev/ttys002","dir":"","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","VSCODE_INJECTION":"1","CONDA_SHLVL":"0","ZDOTDIR":"/Users/kento","LOGNAME":"kento","LESS":"-R","HOST":"MacbookSoon.local","_CE_M":"","PAGER":"less","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js"}},"pid":58766,"ppid":57295},"timestamp":"2022-11-11T13:03:22.930675Z"}
{"rid":"4541635485809777123","terminated":{"status":"0"},"timestamp":"2022-11-11T13:03:35.569924Z"}
{"rid":"515959714103147168","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Active/actions/DoubleSelectionAction_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//rules/Active/actions/DoubleSelectionAction_test.o","rules/Active/actions/DoubleSelectionAction_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","VSCODE_INJECTION":"1","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","PYTHONNOUSERSITE":"1","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","_CE_CONDA":"","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","QT_SELECT":"5","LANG":"en_GB.UTF-8","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","CONDA_SHLVL":"0","TERM":"xterm-256color","XPC_FLAGS":"0x0","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","ZDOTDIR":"/Users/kento","TERM_PROGRAM":"vscode","HOMEBREW_REPOSITORY":"/opt/homebrew","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","__CFBundleIdentifier":"com.microsoft.VSCode","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","MAKEFLAGS":"w","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","HOME":"/Users/kento","ZSH":"/Users/kento/.oh-my-zsh","MallocNanoZone":"0","OLDPWD":"/Users/kento/Develop/quisps","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","COMMAND_MODE":"unix2003","USER_ZDOTDIR":"/Users/kento","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","PAGER":"less","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","dir":"","MFLAGS":"-w","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","LESS":"-R","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HOMEBREW_PREFIX":"/opt/homebrew","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","SHLVL":"3","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","TERM_PROGRAM_VERSION":"1.73.1","OMNETPP_RELEASE":"//omnetpp-6.0.1","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","_CE_M":"","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","XPC_SERVICE_NAME":"0","LOGNAME":"kento","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","MAKELEVEL":"2","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","_":"/opt/homebrew/bin/bear","HOST":"MacbookSoon.local","SHELL":"/bin/zsh","PWD":"/Users/kento/Develop/quisps/quisp2","MAKE_TERMOUT":"/dev/ttys002","MAKE_TERMERR":"/dev/ttys002","LSCOLORS":"Gxfxcxdxbxegedabagacad","COLORTERM":"truecolor","USER":"kento"}},"pid":58796,"ppid":57295},"timestamp":"2022-11-11T13:03:35.721839Z"}
{"rid":"515959714103147168","terminated":{"status":"0"},"timestamp":"2022-11-11T13:03:48.602531Z"}
{"rid":"10727678747416451222","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Active/actions/DoubleSelectionDualActionInv_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//rules/Active/actions/DoubleSelectionDualActionInv_test.o","rules/Active/actions/DoubleSelectionDualActionInv_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","MAKE_TERMOUT":"/dev/ttys002","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","CONDA_SHLVL":"0","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","SHLVL":"3","VSCODE_INJECTION":"1","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","TERM_PROGRAM":"vscode","USER":"kento","MAKELEVEL":"2","_CE_CONDA":"","LSCOLORS":"Gxfxcxdxbxegedabagacad","USER_ZDOTDIR":"/Users/kento","COMMAND_MODE":"unix2003","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0","LOGNAME":"kento","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","MallocNanoZone":"0","TERM_PROGRAM_VERSION":"1.73.1","LESS":"-R","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","_":"/opt/homebrew/bin/bear","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","HOMEBREW_PREFIX":"/opt/homebrew","HOME":"/Users/kento","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","MAKE_TERMERR":"/dev/ttys002","MFLAGS":"-w","_CE_M":"","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","PYTHONNOUSERSITE":"1","__CFBundleIdentifier":"com.microsoft.VSCode","ZDOTDIR":"/Users/kento","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","XPC_SERVICE_NAME":"0","HOST":"MacbookSoon.local","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","SHELL":"/bin/zsh","dir":"","TERM":"xterm-256color","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","HOMEBREW_REPOSITORY":"/opt/homebrew","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","PAGER":"less","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","COLORTERM":"truecolor","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","XPC_FLAGS":"0x0","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","QT_SELECT":"5","LANG":"en_GB.UTF-8","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","OLDPWD":"/Users/kento/Develop/quisps","MAKEFLAGS":"w","PWD":"/Users/kento/Develop/quisps/quisp2","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","OMNETPP_RELEASE":"//omnetpp-6.0.1","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","ZSH":"/Users/kento/.oh-my-zsh","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2"}},"pid":58908,"ppid":57295},"timestamp":"2022-11-11T13:03:48.745990Z"}
{"rid":"10727678747416451222","terminated":{"status":"0"},"timestamp":"2022-11-11T13:04:03.649330Z"}
{"rid":"4993468470841547054","started":{"execution":{"executable":"/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","arguments":["/opt/homebrew-x86_64/opt/llvm@14/bin/clang++","-c","-std=c++17","-O3","-DNDEBUG=1","-ffp-contract=off","-MMD","-MP","-MF","out/clang-release//rules/Active/actions/DoubleSelectionDualActionSecondInv_test.o.d","-isystem","/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/include","-Wno-deprecated-register","-Wno-unused-function","-fno-omit-frame-pointer","-DWITH_QTENV","-DWITH_NETBUILDER","-DWITH_OSG","-DOMNETPPLIBS_IMPORT","-I.","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I.","-I/Users/kento/Develop/quisps/quisp2/json/include/","-I/Users/kento/Develop/quisps/quisp2/spdlog/include/","-I/Users/kento/Develop/quisps/quisp2/eigen/","-I/Users/kento/Develop/work/omnetpp-6.0.1/include","-I../googletest/googletest/include/","-I../googletest/googlemock/include/","-o","out/clang-release//rules/Active/actions/DoubleSelectionDualActionSecondInv_test.o","rules/Active/actions/DoubleSelectionDualActionSecondInv_test.cc"],"working_dir":"/Users/kento/Develop/quisps/quisp2/quisp","environment":{"_CE_CONDA":"","HOMEBREW_CELLAR":"/opt/homebrew/Cellar","__CF_USER_TEXT_ENCODING":"0x1F5:0x0:0x2","QT_LOGGING_RULES":"*.debug=false;qt.qpa.*=false","_":"/opt/homebrew/bin/bear","MFLAGS":"-w","__omnetpp_root_dir":"/Users/kento/Develop/work/omnetpp-6.0.1","PIP_PREFIX":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib/Python.framework/Versions/Current","GIT_ASKPASS":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh","MANPATH":"/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man::","HELP_SYNOPSYS":"\nSYNOPSYS\n    make [TARGET] [VARIABLE1=value1 ...] [make-options]","QT_SELECT":"5","DIRENV_FILE":"/Users/kento/Develop/quisps/quisp2/.envrc","PAGER":"less","DIRENV_WATCHES":"eJxszj1OxDAQQOG7uI52POP4J6mhRKKhQhSz8URrYeLFdgIS4u4UdLDV656-5y_1yP2iZgVPTWqDV9l6gTs5JJcrvO-pXdtvCE6yHXVRg3oosac3UTM6F9A6tNOg7j9T603Nve7yPdz-nnJZOEO7cBWIqcp2AOdcPmCk1TJpg6NoF7TxozfaRhskehTDZx2n1bhgeQmr90g0acdn0mgmWhz9U3kkb_-oXn4CAAD__2NMSlo=","SSH_AUTH_SOCK":"/private/tmp/com.apple.launchd.Qq0h2CC8xl/Listeners","HELP_OPP_TARGETS":"    all       Build the simulator and the samples. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.\n    apis      Build the API documentation.\n    doc       Build the User Guide and the Manual.\n    tests     Build and run the automated tests.\n    samples   Build only the samples.","BISON_PKGDATADIR":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/share/bison","ZDOTDIR":"/Users/kento","MallocNanoZone":"0","DIRENV_DIR":"-/Users/kento/Develop/quisps/quisp2","OLDPWD":"/Users/kento/Develop/quisps","VSCODE_GIT_ASKPASS_MAIN":"/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js","XPC_SERVICE_NAME":"0","HOST":"MacbookSoon.local","TMPDIR":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/","LOGNAME":"kento","QT_PLUGIN_PATH":"/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/plugins","HELP_EXAMPLES":"\nEXAMPLES\n    $ make MODE=debug\n    Build in debug mode.\n\n    $ make MODE=release V=1\n    Build in release mode, show compiler and linker command lines.\n\n    $ make SHARED_LIBS=no\n    Build static instead of dynamic libraries.\n\n    $ make MODE=release CFLAGS_RELEASE='-O0 -DNDEBUG=1'\n    Build in release mode, but do not optimize.\n\n    $ make MODE=sanitize CFLAGS_EXTRA=-fsanitize-trap=undefined\n    Build with the default sanitizers, and in addition, generate\n    traps where the code relies on undefined C/C++ language behavior.\n\n    $ make MODE=sanitize SANITIZE_FLAGS=-fsanitize=memory\n    Instrument the code with the memory sanitizer only instead of the\n    default sanitizers.\n","TERM_PROGRAM":"vscode","ZSH":"/Users/kento/.oh-my-zsh","TERM_PROGRAM_VERSION":"1.73.1","TERM":"xterm-256color","_CE_M":"","INFOPATH":"/opt/homebrew/share/info:/opt/homebrew/share/info:","VSCODE_GIT_IPC_HANDLE":"/var/folders/q_/cf4zy94s0fb6sqycthqz9n3h0000gn/T/vscode-git-aab89c2862.sock","PYTHONPATH":"/Users/kento/Develop/work/omnetpp-6.0.1/python","MAKELEVEL":"2","dir":"","HOMEBREW_REPOSITORY":"/opt/homebrew","HELP_TARGETS":"\nTARGETS\n    all       Build the simulation. (This is the default target.)\n              If the MODE variable is not specified, both release and debug mode\n              binaries will be created.\n    clean     Clean build artifacts belonging to the selected mode\n              (MODE=\u003cmodename\u003e, or 'release' by default).\n    cleanall  Clean build artifacts for all modes.","PWD":"/Users/kento/Develop/quisps/quisp2","SHELL":"/bin/zsh","HELP_OPP_VARIABLES":"\n    SHARED_LIBS\n              Use 'no' to build static libraries.\n\n    WITH_QTENV, WITH_OSG, WITH_OSGEARTH, WITH_NETBUILDER, WITH_LIBXML, WITH_PARSIM, WITH_SYSTEMC\n              Turn off features by specifying 'no' for these variables.\n\n    PREFER_SQLITE_RESULT_FILES\n              Specify 'yes' to write result files in SQLite database file\n              format by default.","CONDA_EXE":"/Users/kento/opt/anaconda3/bin/conda","HOME":"/Users/kento","USER_ZDOTDIR":"/Users/kento","HOMEBREW_PREFIX":"/opt/homebrew","PYTHONNOUSERSITE":"1","XPC_FLAGS":"0x0","ORIGINAL_XDG_CURRENT_DESKTOP":"undefined","HELP_VARIABLES":"\nVARIABLES\n    MODE      'release', 'debug', 'sanitize' or any other user defined string.\n              Modes specify what compiler and linker flags are used during the\n              build. User defined modes must be added in the 'Makefile.inc.in' file.\n              (Look for the 'Configure MODE specific flags/suffixes' section.)\n              After adding a new mode, run './configure' again to re-create\n              the Makefile.inc file. The output will be available in the\n              'out/${TOOLCHAIN}-${MODE}' folder.\n\n              Predefined modes are:\n              - release: Generate optimized code without debugging info.\n              - debug: Generate code for debugging.\n              - sanitize: Generate code which is instrumented with various\n                sanitizers. The list of available sanitizers depend on the\n                compiler. For example, Clang provides AddressSanitizer,\n                MemorySanitizer, etc.\n                Default options: -fsanitize=leak,address,undefined\n\n    V         Use V=1 to echo all build commands on the console. This is useful\n              for debugging the build process.\n\n    CFLAGS_RELEASE, CFLAGS_DEBUG, SANITIZE_FLAGS\n              Various flags used by default in 'release', 'debug' or 'sanitize'\n              mode. Specifying these on the command line will override the\n              default values for the given mode.\n\n    CFLAGS_EXTRA, LDFLAGS_EXTRA\n              Allows adding compiler and linker flags to the default command line\n              options.\n\n    CFLAGS, LDFLAGS\n              Allows overriding the compiler and linker flags.\n\n    CXXFLAGS  Compiler flags that should be passed to the C++ compiler\n              only (e.g. -std=c++11).","PATH":"/opt/homebrew-x86_64/opt/llvm@14/bin:/Users/kento/Develop/work/omnetpp-6.0.1/tools/macosx.x86_64/bin:/Users/kento/Develop/work/omnetpp-6.0.1/bin:/bin:/opt/homebrew/opt/openssl@3/bin:/opt/homebrew/opt/curl/bin:/opt/homebrew/opt/make/libexec/gnubin:/usr/local/bin:/usr/local/share/dotnet:/usr/bin:/usr/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/sbin:/Library/Apple/usr/bin:/Users/kento/Qt/6.3.1/macos/bin:/Users/kento/.nodebrew/node/v18.7.0/bin/:/opt/homebrew/opt/make/libexec/gnubin/","VSCODE_INJECTION":"1","LANG":"en_GB.UTF-8","MAKE_TERMERR":"/dev/ttys002","CONDA_PYTHON_EXE":"/Users/kento/opt/anaconda3/bin/python","COMMAND_MODE":"unix2003","MAKE_TERMOUT":"/dev/ttys002","DIRENV_DIFF":"eJzsU1tvozwQ_S9-Djjk4jSRPql8gbSkaSAJJN2-IC5eoBjbtYGSVP3vq4RedhVVu6vdx30Bz8w5x_KcmWfAweQZOLp7DSYAhhmdQMZLmLIChwI_nQLGMZWSXPY_qUeVIJ-UiiDHkGQhbnAEE1qdUJUUkLAoeCV9hDINBIYxKyku2_w7QJ7rn2daUPtdZKEIxB7qnBP8oeVJLCTMMS0ZXJUQqX1Vg0UQMXleVymLW-HjAdbahTpSu0cc_LWnQvDSAfTYYMNam8utb1hrMAHKD7cYuMaEcfhYZZLL9tcDnTfKzFqYR2t-SoEqprWIPpg73Z1emxswAXjeyMODZjeGvlrZV6PKGvYc2xnMUZGub27SVbo5XHhr8QUvZnFibQbVwIsXxhYNkTLc-9re6WX3ydZxd4_GdkxQ4srhfB6J2lb4XVzWUxPtr--266TPmAyivufeotlYR-XSTkYPYxd1-8saj_ZOfFAond_bpj2K_t9ZjxHv6XYcOcU019w5T9CSzUZuww5fg3Uqc5y6xn3To1qYJnhViHE36QZRTLtFUuzSw9jr53noK-yODqa6bvh-b3m7Iew_0Hmf6O9tUpoL5KPBKUdIXVxqg3PT33r7xEQOWUFxybmC1K6qwZIxItthadRXrd_hn7D_Vuwvr1gHrFzfWXhX1tJ_c_0PDOWkSjIqW9mNuTCnLpiAIXh5-RYAAP__d23Jtw==","LSCOLORS":"Gxfxcxdxbxegedabagacad","USER":"kento","__CFBundleIdentifier":"com.microsoft.VSCode","SHLVL":"3","CONDA_SHLVL":"0","COLORTERM":"truecolor","OMNETPP_RELEASE":"//omnetpp-6.0.1","VSCODE_GIT_ASKPASS_NODE":"/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper","VSCODE_GIT_ASKPASS_EXTRA_ARGS":"--ms-enable-electron-run-as-node","CPLUS_INCLUDE_PATH":":/Users/kento/Library/ac-library:/Users/kento/Library/ac-library:/Users/kento/Library/ac-library","LDFLAGS":"-L/opt/homebrew/opt/openssl@3/lib  -L/opt/homebrew/opt/openssl@3/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/lib -Wl,-rpath,/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -Wl,-rpath,.  -L/usr/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -F/Users/kento/Develop/work/omnetpp-6.0.1/tools/macos.x86_64/lib -L/Users/kento/Develop/work/omnetpp-6.0.1/lib","MAKEFLAGS":"w","LESS":"-R","DISPLAY":"/private/tmp/com.apple.launchd.JYAnJAZuwA/org.xquartz:0"}},"pid":59166,"ppid":57295},"timestamp":"2022-11-11T13:04:03.803960Z"}
